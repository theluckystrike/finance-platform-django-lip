{"version":3,"file":"static/js/571.1e587337.chunk.js","mappings":"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","sources":["Comopnent/ui/Modals/NewCategoryModal/NewCategoryModal.tsx","Comopnent/Charts/TreeChart.tsx","pages/UploadScript/CategoryManger.tsx","pages/UploadScript/DeleteModal.tsx"],"sourcesContent":["import { FC, useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  useRemoveMutation,\n  useUpdateMutation,\n} from \"../../../../Redux/CategoryQuery\";\nimport { log } from \"console\";\nimport useToast from \"../../../../customHook/toast\";\nimport DeleteModal from \"../DeleteModal/DeleteModal\";\nimport ArrowDown from \"../../../../assest/image/arrow-down.png\";\n\ninterface NewCategoryModalProps {\n  show: boolean;\n  handleClose: () => void;\n  selected: string;\n  editingCategory: any | null;\n  token: any;\n  data: any;\n  selectedPERnt: any;\n  categoryData:any;\n  showDel: any;\n}\n\nconst NewCategoryModal: FC<NewCategoryModalProps> = ({\n  show,\n  selected,\n  handleClose,\n  data,\n  editingCategory,\n  categoryData,\n  token,\n  selectedPERnt,\n  showDel,\n}) => {\n  const navigate = useNavigate();\n  const [update, update_res] = useUpdateMutation();\n\n  const handleToast = useToast();\n\n  const [categoryName, setCategoryName] = useState(selected);\n  const [parentCategory, setParentCategory] = useState(selectedPERnt);\n  const [isEditing, setIsEditing] = useState(false);\n\n\n  useEffect(() => {\n    if (editingCategory) {\n      setCategoryName(editingCategory.name);\n      setParentCategory(selectedPERnt);\n      setIsEditing(true);\n    } else {\n      setCategoryName(\"\");\n      setIsEditing(false);\n    }\n  }, [editingCategory, selected]);\n\n  const handleSave = async () => {\n    await update({\n      token: token.access,\n      id: editingCategory.id,\n      data: {\n        name: categoryName,\n        parent_category: parentCategory.id,\n      },\n    });\n\n    handleToast.SuccessToast(`Category updated successfully`);\n\n    handleClose();\n  };\n\n  const handleDelete = async () => {\n    handleClose();\n\n    showDel(editingCategory);\n  };\n\n\n  const [FilterCategory,setFilterCategory]=useState([])\n  const [dataTypeOption ,setDataTypeOption]=useState(false)\n  const FilterData = (value: any) => {\n    if (value !== '') {\n      const trimmedValue = value?.trim(); // Trim the input value\n      const res = categoryData.filter((i: any) =>\n        i.name.toLowerCase().includes(trimmedValue.toLowerCase())\n      );\n      console.log(res, 'res');\n      setFilterCategory(res);\n    } else {\n      setFilterCategory([]);\n    }\n  }\n  \n \n\n  return (\n<Modal\n        size=\"lg\"\n        fullscreen=\"md-down\" \n        aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={show}\n      onHide={handleClose}\n    >\n      <Modal.Body\n        className=\"bg-light-green\"\n        style={{ borderRadius: \"25px\", overflow: \"hidden\" }}\n      >\n        <h4>{isEditing ? \"Edit Category\" : \"Create a Category\"}</h4>\n        <form method=\"post\" encType=\"multipart/form-data\">\n          <div className=\"mb-3\">\n            <div className=\"row mx-0 px-3\">\n              <div className=\"col-12 m-0\">\n                <label htmlFor=\"category\" className=\"form-label\">\n                  Category Name\n                </label>\n                <input\n                  id=\"category\"\n                  name=\"category\"\n                  className=\"form-control m-0\"\n                  value={categoryName}\n                  onChange={(e) => setCategoryName(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-12\">\n                <label htmlFor=\"parent_category\" className=\"form-label\">\n                  Parent category \n                </label>\n\n\n                <div className=\"dropdown\">\n                    <div className=\"arrow_down\">\n                      <img src={ArrowDown} alt=\"\" />\n                    </div>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Select a category\"\n                      value={parentCategory.name}\n                   onChange={(e) => {\n                     \n                    setParentCategory({...parentCategory,name:e.target.value})\n                    FilterData( e.target.value)\n                  \n                  }}\n                      \n                    />\n                  <div\n  className=\"dropdown-content\"\n  style={{ maxHeight: \"200px\", overflow: \"auto\", display: FilterCategory.length > 0  ? 'block' : 'none' }}\n>  <span className=\"h6  \">\n                      <span\n                        className=\"hover-span text-muted\"\n                        onClick={() => setParentCategory({ name: \"\", id: \"\" })}\n                      >\n                        None\n                      </span>\n                    </span>\n\n                      {FilterCategory.length > 0  &&\n                        FilterCategory.map((item: any, index: any) => (\n                          <span\n                            className=\"h6 hover-span\"\n                            key={item.name}\n                            onClick={async () => {\n                           await   setParentCategory(item)\n    setFilterCategory([])\n\n                            }}\n                          >\n                            {item.name}\n                          </span>\n                        ))}\n                    </div>\n                  </div>\n\n{/* \n                <div className=\"dropdown\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"All\"\n                    value={parentCategory.name}\n                    readOnly\n                  />\n                  <div\n                    className=\"dropdown-content\"\n                    style={{ height: \"200px\", overflow: \"auto\" }}\n                  >\n                    <span className=\"h6  \">\n                      <span\n                        className=\"hover-span text-muted\"\n                        onClick={() => setParentCategory({ name: \"\", id: \"\" })}\n                      >\n                        None\n                      </span>\n                    </span>\n                    {FilterCategory.length > 0 &&\n                      FilterCategory.map((item: any, index: any) => (\n                        <span className=\"h6  \" key={item.name}>\n                          <span\n                            className=\"hover-span \"\n                            onClick={() => setParentCategory(item)}\n                          >\n                            {item.name}\n                          </span>\n                        </span>\n                      ))}\n                  </div>\n                </div> */}\n              </div>\n              <div className=\"col-12 row justify-content-evenly m-0\">\n                <label\n                  style={{ height: \"33px\" }}\n                  htmlFor=\"category\"\n                  className=\"invisible\"\n                >\n                  Actions\n                </label>\n                {isEditing && (\n                  <button\n                    onClick={handleDelete}\n                    className=\"btn btn-danger col-3 px-3 fw-bold\"\n                    type=\"button\"\n                  >\n                    Delete\n                  </button>\n                )}\n                <button\n                  onClick={handleClose}\n                  className=\"btn btn-light border border-2 border-dark col-3 px-3 fw-bold\"\n                  type=\"button\"\n                >\n                  Close\n                </button>\n                <button\n                  onClick={handleSave}\n                  className=\"btn btn-dark col-3 px-3 fw-bold\"\n                  type=\"button\"\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default NewCategoryModal;\n","import React, { useState } from \"react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { Categoryarray2 } from \"../../DummyData/TableData\";\nimport NewCategoryModal from \"../ui/Modals/NewCategoryModal/NewCategoryModal\";\nimport DeleteModal from \"../../pages/UploadScript/DeleteModal\";\n\nconst RenderTree = (data: any, categoryData:any,token: any, level = 0) => {\n  const [expandedCategories, setExpandedCategories] = useState<string[]>([]);\n  const [selected, setSelected] = useState(\"\");\n  const [selectedPERnt, setSelectedPREnt] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [editingCategory, setEditingCategory] = useState<string | null>(null);\n  const [editingCategoryid, setEditingCategoryid] = useState<string | null>(\n    null\n  );\n\n  const handleClose = () => {\n    setShow(false);\n    setEditingCategory(null);\n  };\n\n  const handleShow = (value: any) => {\n    setSelected(value);\n    setShow(true);\n  };\n\n  const toggleExpand = (name: string) => {\n    setExpandedCategories((prev) =>\n      prev.includes(name)\n        ? prev.filter((category) => category !== name)\n        : [...prev, name]\n    );\n  };\n\n  const startEditing = (name: any, value: any) => {\n    setEditingCategory(name);\n    setSelectedPREnt(value);\n\n    handleShow(name);\n  };\n\n  const [del, setDel] = useState(false);\n  const [delvalue, setDelete] = useState({});\n  const showDel = (valuee: any) => {\n    setDelete(valuee);\n    setDel(true);\n  };\n  return (\n    <>\n      <ul className=\"tree-class\">\n        {data.map((item: any, index: any) => (\n          <li key={index}>\n            <div>\n              <span\n                onClick={() => toggleExpand(item.name)}\n                style={{ cursor: \"pointer\" }}\n              >\n                {item.name}\n                <FaEdit\n                  onClick={(e: any) => {\n                    e.stopPropagation();\n                    startEditing(item, { name: \"\", id: \"\" });\n                  }}\n                  style={{ marginLeft: \"8px\", cursor: \"pointer\" }}\n                />\n              </span>\n              {expandedCategories.includes(item.name) && item.subcategories && (\n                <ul>\n                  {item.subcategories.map((innerItem: any, innerIndex: any) => (\n                    <li key={innerIndex}>\n                      <span\n                        onClick={() => toggleExpand(innerItem.name)}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        {innerItem.name}\n                        <FaEdit\n                          onClick={(e: any) => {\n                            e.stopPropagation();\n                            startEditing(innerItem, item);\n                          }}\n                          style={{ marginLeft: \"8px\", cursor: \"pointer\" }}\n                        />\n                      </span>\n                      {expandedCategories.includes(innerItem.name) &&\n                        innerItem.subcategories && (\n                          <ul>\n                            {innerItem.subcategories.map(\n                              (subinnerItem: any, subinnerIndex: any) => (\n                                <li key={subinnerIndex}>\n                                  <span\n                                    onClick={() =>\n                                      startEditing(  \n                                         subinnerItem,\n                                        innerItem,\n                                      )\n                                    }\n                                    style={{ cursor: \"pointer\" }}\n                                  >\n                                    {subinnerItem.name}\n                                  </span>\n                                </li>\n                              )\n                            )}\n                          </ul>\n                        )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n      <NewCategoryModal\n        show={show}\n        handleClose={handleClose}\n        selected={selected}\n        selectedPERnt={selectedPERnt}\n        editingCategory={editingCategory}\n        data={data}\n        categoryData={categoryData}\n        token={token}\n        showDel={showDel}\n      />\n\n      <DeleteModal\n        show={del}\n        handleClose={() => setDel(false)}\n        token={token}\n        data={delvalue}\n      />\n    </>\n  );\n};\n\nconst CategoryTree = ({ categoryFilter,categoryData, token }: any) => {\n  return (\n    <div className=\"category-tree mx-auto col-3\">\n      <h3>Category Tree</h3>\n      {RenderTree(categoryFilter,categoryData, token)}\n    </div>\n  );\n};\n\nexport default CategoryTree;\n","import React, { useEffect, useState } from \"react\";\nimport OrgChartTree from \"../../Comopnent/Charts/TreeChart\";\nimport { useNavigate } from \"react-router-dom\";\nimport Icon from \"../../Comopnent/ui/icon/Icon\";\nimport { useGetAllCategoryQuery } from \"../../Redux/CategoryQuery\";\n\nconst CategoryManger = () => {\n  const [loginUser, setLoginUser] = useState<any>(\n    JSON.parse(localStorage.getItem(\"login\") as any)\n  );\n\n  // Effect to retrieve loginUser from localStorage on component mount\n  useEffect(() => {\n    const storedLoginUser = localStorage.getItem(\"login\");\n    // Check if storedLoginUser is not null before parsing\n    if (storedLoginUser) {\n      setLoginUser(JSON.parse(storedLoginUser)); // Set the loginUser state if it's available\n    }\n  }, []);\n\n  const Navigate = useNavigate();\n  const { data: AllCategory, isError } = useGetAllCategoryQuery({\n    token: loginUser.access,\n  });\n  const categoryData = AllCategory?.results || [];\n  const [categoryFilter, setCategoryFilter] = useState<any>([]);\n  useEffect(() => {\n    const categoryMap: any = {};\n    // Initialize categories in the map\n    categoryData.forEach((cat: any) => {\n      categoryMap[cat.id] = { ...cat, subcategories: [] };\n    });\n    // Populate the subcategories\n    categoryData.forEach((cat: any) => {\n      if (cat.parent_category === null) {\n        // Root category, do nothing here\n      } else {\n        // Find the parent category and add the current category as a subcategory\n        const parent: any = Object.values(categoryMap).find(\n          (parentCat: any) => parentCat.id === cat.parent_category\n        );\n        if (parent) {\n          parent.subcategories.push(categoryMap[cat.id]);\n        }\n      }\n    });\n\n    // Extract root categories\n    const structuredCategories = Object.values(categoryMap).filter(\n      (cat: any) => cat.parent_category === null\n    );\n\n    setCategoryFilter(structuredCategories);\n  }, [categoryData]);\n\n  return (\n    <div className=\"m-4\">\n      <div className=\"d-flex justify-content-start flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-2 text-center\">\n        <button className=\"btn mb-3\" onClick={() => Navigate(-1)}>\n          <Icon icon=\"ArrowBack\" size=\"45px\" color=\"dark\" />\n        </button>{\" \"}\n        <h3 className=\"h1 fw-bold\">Category manager</h3>\n      </div>\n      <OrgChartTree categoryFilter={categoryFilter} categoryData={categoryData} token={loginUser} />\n    </div>\n  );\n};\n\nexport default CategoryManger;\n","import { FC, useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { log } from \"console\";\nimport { useDispatch } from \"react-redux\";\nimport { useRemoveMutation } from \"../../Redux/CategoryQuery\";\nimport useToast from \"../../customHook/toast\";\n\ninterface DeleteModalProps {\n  show: boolean;\n  handleClose: () => void;\n  token: any;\n  data: any;\n}\n\nconst DeleteModal: FC<DeleteModalProps> = ({\n  show,\n  handleClose,\n  data,\n  token,\n}) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [remove, delete_res] = useRemoveMutation();\n\n  const handleToast = useToast();\n  const handleDelete = async () => {\n    await remove({ token: token.access, id: data?.id });\n    handleToast.SuccessToast(`Category delete successfully`);\n    handleClose();\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      fullscreen=\"md-down\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={show}\n      onHide={handleClose}\n    >\n      <Modal.Body\n        className=\"bg-light-green\"\n        style={{ borderRadius: \"25px\", overflow: \"hidden\" }}\n      >\n        <div className=\"mb-3\">\n          <div className=\"row mx-0 px-3\">\n            <div className=\"col-12 m-0\"></div>\n            <div className=\"col-12  \">\n              <h4>Delete Category</h4>\n              <p>Are you sure you want to delete {data.name} category?</p>\n            </div>\n            <div className=\"col-12 row justify-content-evenly m-0\">\n              <label\n                style={{ height: \"33px\" }}\n                htmlFor=\"category\"\n                className=\"invisible\"\n              >\n                Actions\n              </label>\n\n              <button\n                onClick={handleDelete}\n                className=\"btn btn-danger col-3 px-3 fw-bold\"\n                type=\"button\"\n              >\n                Delete\n              </button>\n\n              <button\n                onClick={handleClose}\n                className=\"btn btn-light border border-2 border-dark col-3 px-3 fw-bold\"\n                type=\"button\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default DeleteModal;\n"],"names":["_ref","show","selected","handleClose","data","editingCategory","categoryData","token","selectedPERnt","showDel","useNavigate","update","update_res","useUpdateMutation","handleToast","useToast","categoryName","setCategoryName","useState","parentCategory","setParentCategory","isEditing","setIsEditing","useEffect","name","FilterCategory","setFilterCategory","dataTypeOption","setDataTypeOption","_jsx","Modal","size","fullscreen","centered","onHide","children","_jsxs","Body","className","style","borderRadius","overflow","method","encType","htmlFor","id","value","onChange","e","target","required","src","ArrowDown","alt","type","placeholder","trimmedValue","trim","res","filter","i","toLowerCase","includes","console","log","FilterData","maxHeight","display","length","onClick","map","item","index","async","height","access","parent_category","SuccessToast","RenderTree","expandedCategories","setExpandedCategories","setSelected","setSelectedPREnt","setShow","setEditingCategory","editingCategoryid","setEditingCategoryid","toggleExpand","prev","category","startEditing","handleShow","del","setDel","delvalue","setDelete","_Fragment","cursor","FaEdit","stopPropagation","marginLeft","subcategories","innerItem","innerIndex","subinnerItem","subinnerIndex","NewCategoryModal","valuee","DeleteModal","categoryFilter","CategoryManger","loginUser","setLoginUser","JSON","parse","localStorage","getItem","storedLoginUser","Navigate","AllCategory","isError","useGetAllCategoryQuery","results","setCategoryFilter","categoryMap","forEach","cat","parent","Object","values","find","parentCat","push","structuredCategories","Icon","icon","color","OrgChartTree","useDispatch","remove","delete_res","useRemoveMutation"],"sourceRoot":""}