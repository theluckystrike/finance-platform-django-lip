{"version":3,"file":"static/js/927.1d98794d.chunk.js","mappings":"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","sources":["pages/AllScript/AllScript.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../../assest/css/AllScript.css\";\nimport Icon from \"../../Comopnent/ui/icon/Icon\";\nimport FilterModal from \"../../Comopnent/ui/Modals/FilterModal/FilterModal\";\nimport { ActiveRoute } from \"../../Menu\";\nimport SaveModal from \"../../Comopnent/ui/Modals/SaveModal/SaveModal\";\nimport ArrowDown from \"../../assest/image/arrow-down.png\";\nimport { ScriptData } from \"../../DummyData/TableData\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport useSortableData from \"../../customHook/useSortable\";\nimport { GetAllScripts, GetScriptbyCategorys } from \"../../Redux/Script/ScriptSlice\";\nimport { loginUSer } from \"../../customHook/getrole\";\nimport DateFormatter from \"../../customHook/useTImeformnt\";\nimport Loader from \"../../Comopnent/ui/Loader\";\nimport CreateReports from \"../../Comopnent/ui/Modals/CreateReports/ModalReports\";\nimport PaginationButtons, {\n  dataPagination,\n  PER_COUNT,\n} from \"../../Comopnent/ui/PaginationButtons\";\n\nconst CustomReport = () => {\n  const dispatch = useDispatch();\n  const store: any = useSelector((i) => i);\n  const { loading } = store?.script;\n  const allscripts = store?.script?.Scripts?.results || [];\n  const [selectedScripts, setSelectedScripts] = useState<any>([]);\n  const [loginUser, setLoginUser] = useState<any>(null);\n\n  const [filterQuery,setFilterQuery]=useState<any>(null)\n  // Effect to retrieve loginUser from localStorage on component mount\n  useEffect(() => {\n  \n    \n    const storedLoginUser = localStorage.getItem(\"login\");\n    if (storedLoginUser) {\n      setLoginUser(JSON.parse(storedLoginUser));\n    }\n   \n  }, []);\n  useEffect(() => {\n   \n    if (loginUser) {\n      const getDAta = async () => {\n        try {\n          // alert('running')\n          // console.log(allscripts.length ,filterQuery);\n          \n          \n            await dispatch(GetAllScripts({ token: loginUser?.access }));\n          \n        } catch (error) {\n          console.log(error);\n        }\n      };\n      getDAta();\n    }\n  }, [loginUser]);\n\n  const [show, setShow] = useState(false);\n  const [showReport, setShowReport] = useState(false);\n  const handleClose = async () => {\n    setShow(false);\n  };\n  const handleShow = () => {\n    setShow(true);\n  };\n  const [Saveshow, setSaveShow] = useState(false);\n  const handleSaveClose = () => setSaveShow(false);\n\n  const handleSelectAll = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      // Select all scripts\n      const allScriptIds: any = items.map((script: any) => script.id);\n      setSelectedScripts(allScriptIds);\n    } else {\n      // Deselect all scripts\n      setSelectedScripts([]);\n    }\n  };\n\n  const handleCheckboxChange = (id: any) => {\n    if (selectedScripts.includes(id)) {\n      setSelectedScripts(\n        selectedScripts.filter((scriptId: any) => scriptId !== id)\n      );\n    } else {\n      setSelectedScripts([...selectedScripts, id]);\n    }\n  };\n  // Check if all scripts are selected\n  const { items, requestSort, getClassNamesFor } = useSortableData(\n    allscripts || []\n  );\n  const isAllSelected = selectedScripts.length === items.length;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState<number>(PER_COUNT[\"10\"]);\n\n  return (\n    <>\n      <div className=\"mx-4\">\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\n          <h1 className=\"h2\">\n            All scripts <span id=\"headerInfo\">({items.length})</span>\n          </h1>\n          <div className=\"btn-toolbar mb-2 mb-md-0\">\n            <button type=\"button\" className=\"btn icon-button my-1 mx-2\">\n              <Icon icon=\"AddBusiness\" size=\"20px\" />\n              <span>Home</span>\n            </button>\n         <button onClick={handleShow} className=\"btn icon-button my-1 mx-2 position-relative\">\n  <Icon icon=\"Filter\" size=\"20px\" />\n  \n  {filterQuery&& (\n    <span className=\"filter-count-badge\">\n      1\n    </span>\n  )}\n  <span>Filter</span>\n</button>\n\n            <button\n              onClick={() => setShowReport(true)}\n              type=\"button\"\n              className=\"btn icon-button my-1 mx-2\"\n            >\n              <Icon icon=\"Save\" size=\"20px\" />\n\n              <span>Save</span>\n            </button>\n            <button\n              type=\"submit\"\n              form=\"customReportForm\"\n              className=\"btn icon-button my-1 mx-2 disabled\"\n            >\n              <Icon icon=\"Download\" size=\"20px\" />\n\n              <span>Download</span>\n            </button>\n          </div>\n        </div>\n        <div>\n          {!loading ? (\n            <div style={{ overflow: \"auto\" }} id=\"customReportForm\">\n              <div className=\"py-2\">\n                <PaginationButtons\n                  data={items}\n                  label=\"Scripts\"\n                  setCurrentPage={setCurrentPage}\n                  currentPage={currentPage}\n                  perPage={perPage}\n                  setPerPage={setPerPage}\n                />\n              </div>\n              <table className=\"table\" style={{ minWidth: \"1000px\" }}>\n                <thead>\n                  <tr className=\"fw-bold mb-2 p-2\">\n                    <th scope=\"col\" className=\"col-1\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"selectAllCheckbox\"\n                        checked={isAllSelected}\n                        onChange={handleSelectAll}\n                      />\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"col-4\"\n                      onClick={() => requestSort(\"name\")}\n                    >\n                      <h6>\n                        <span>Name</span>\n                        <Icon\n                          size=\"10px\"\n                          className={getClassNamesFor(\"name\")}\n                          icon=\"FilterList\"\n                        />\n                      </h6>\n                    </th>\n\n                    <th\n                      scope=\"col\"\n                      className=\"col-1 text-center mx-auto\"\n                      onClick={() => requestSort(\"category.name\")}\n                    >\n                      <h6>\n                        <span>Category</span>\n                        <Icon\n                          size=\"10px\"\n                          className={getClassNamesFor(\"category.name\")}\n                          icon=\"FilterList\"\n                        />\n                      </h6>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"col-2 text-center mx-auto\"\n                      onClick={() => requestSort(\"sub category 1 \")}\n                    >\n                      <h6>\n                        <span>Sub Category 1 </span>\n                        <Icon\n                          size=\"10px\"\n                          className={getClassNamesFor(\"sub category 1 \")}\n                          icon=\"FilterList\"\n                        />\n                      </h6>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"col-2 text-center mx-auto\"\n                      onClick={() => requestSort(\"sub category 1 \")}\n                    >\n                      <h6>\n                        <span>Sub Category 2 </span>\n                        <Icon\n                          size=\"10px\"\n                          className={getClassNamesFor(\"sub category 1 \")}\n                          icon=\"FilterList\"\n                        />\n                      </h6>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"col-2 text-center mx-auto\"\n                      onClick={() => requestSort(\"created\")}\n                    >\n                      <h6>\n                        <span>Created</span>\n                        <Icon\n                          size=\"10px\"\n                          className={getClassNamesFor(\"created\")}\n                          icon=\"FilterList\"\n                        />\n                      </h6>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      className=\"col-2 text-center mx-auto\"\n                      onClick={() => requestSort(\"last_updated\")}\n                    >\n                      <h6>\n                        <span>Updated</span>\n                        <Icon\n                          size=\"10px\"\n                          className={getClassNamesFor(\"last_updated\")}\n                          icon=\"FilterList\"\n                        />\n                      </h6>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody id=\"scriptsCheckboxes\">\n                  {items.length > 0 ? (\n                    dataPagination(items, currentPage, perPage).map(\n                      (script: any, index: any) => (\n                        <>\n                          <tr\n                            key={index}\n                            className=\"table-card rounded-3 bg-light-green mb-2 p-3\"\n                            style={{ borderRadius: \"10px\" }}\n                          >\n                            <td className=\"col-1\">\n                              <input\n                                type=\"checkbox\"\n                                checked={selectedScripts.includes(script.id)}\n                                onChange={() => handleCheckboxChange(script.id)}\n                              />\n                            </td>\n                            <td className=\"col-4\">\n                              <Link\n                                to={`/account/ScriptDetails/${script.id}`}\n                                className=\"text-decoration-none text-black\"\n                              >\n                                <span className=\"fw-bold\">{script.name}</span>\n                              </Link>\n                            </td>\n                            <td className=\"col-1 text-center wrap-word mx-auto\">\n                              {\n                                script.category?.parent_category\n                                  ?.parent_category?.name\n                              }\n                            </td>\n\n                            <td className=\"col-2 text-center wrap-word mx-auto\">\n                              {script.category?.parent_category?.name}\n                            </td>\n                            <td className=\"col-2 text-center wrap-word mx-auto\">\n                              {script?.category?.name}\n                            </td>\n                            <td className=\"col-2 text-center mx-auto\">\n                              <DateFormatter isoString={script.created} />\n                            </td>\n                            <td className=\"col-2 text-center mx-auto\">\n                              <DateFormatter isoString={script.last_updated} />\n                            </td>\n                          </tr>\n                          <tr style={{ height: \"10px\" }}></tr>\n                        </>\n                      )\n                    )\n                  ) : (\n                    <tr>\n                      <td colSpan={6}>\n                        {store?.script?.Scripts?.count === 0 ? (\n                          <p>No scripts found</p>\n                        ) : (\n                          <Loader />\n                        )}\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <span className=\"text-large\">\n              <Loader />\n            </span>\n          )}\n        </div>\n      </div>\n\n      <FilterModal show={show} handleClose={handleClose} filterQuery={filterQuery} setFilterQuery={setFilterQuery} />\n      <SaveModal show={Saveshow} handleClose={handleSaveClose} />\n      <CreateReports\n        show={showReport}\n        handleClose={() => setShowReport(false)}\n        selectedScripts={selectedScripts}\n      />\n    </>\n  );\n};\n\nexport default CustomReport;\n"],"names":["CustomReport","_store$script","_store$script$Scripts","_store$script2","_store$script2$Script","dispatch","useDispatch","store","useSelector","i","loading","script","allscripts","Scripts","results","selectedScripts","setSelectedScripts","useState","loginUser","setLoginUser","filterQuery","setFilterQuery","useEffect","storedLoginUser","localStorage","getItem","JSON","parse","async","GetAllScripts","token","access","error","console","log","getDAta","show","setShow","showReport","setShowReport","Saveshow","setSaveShow","items","requestSort","getClassNamesFor","useSortableData","isAllSelected","length","currentPage","setCurrentPage","perPage","setPerPage","PER_COUNT","_jsxs","_Fragment","children","className","id","type","_jsx","Icon","icon","size","onClick","handleShow","form","Loader","style","overflow","PaginationButtons","data","label","minWidth","scope","checked","onChange","e","target","allScriptIds","map","dataPagination","index","_script$category","_script$category$pare","_script$category$pare2","_script$category2","_script$category2$par","_script$category3","borderRadius","includes","handleCheckboxChange","filter","scriptId","Link","to","name","category","parent_category","DateFormatter","isoString","created","last_updated","height","colSpan","count","FilterModal","handleClose","SaveModal","handleSaveClose","CreateReports"],"sourceRoot":""}