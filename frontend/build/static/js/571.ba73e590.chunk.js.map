{"version":3,"file":"static/js/571.ba73e590.chunk.js","mappings":"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","sources":["Comopnent/ui/Modals/NewCategoryModal/NewCategoryModal.tsx","Comopnent/Charts/TreeChart.tsx","pages/UploadScript/CategoryManger.tsx","pages/UploadScript/DeleteModal.tsx"],"sourcesContent":["import { FC, useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  useRemoveMutation,\r\n  useUpdateMutation,\r\n} from \"../../../../Redux/CategoryQuery\";\r\nimport { log } from \"console\";\r\nimport useToast from \"../../../../customHook/toast\";\r\nimport DeleteModal from \"../DeleteModal/DeleteModal\";\r\n\r\ninterface NewCategoryModalProps {\r\n  show: boolean;\r\n  handleClose: () => void;\r\n  selected: string;\r\n  editingCategory: any | null;\r\n  token: any;\r\n  data: any;\r\n  selectedPERnt: any;\r\n  showDel: any;\r\n}\r\n\r\nconst NewCategoryModal: FC<NewCategoryModalProps> = ({\r\n  show,\r\n  selected,\r\n  handleClose,\r\n  data,\r\n  editingCategory,\r\n  token,\r\n  selectedPERnt,\r\n  showDel,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const [update, update_res] = useUpdateMutation();\r\n\r\n  const handleToast = useToast();\r\n\r\n  const [categoryName, setCategoryName] = useState(selected);\r\n  const [parentCategory, setParentCategory] = useState(selectedPERnt);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if (editingCategory) {\r\n      setCategoryName(editingCategory.name);\r\n      setParentCategory(selectedPERnt);\r\n      setIsEditing(true);\r\n    } else {\r\n      setCategoryName(\"\");\r\n      setIsEditing(false);\r\n    }\r\n  }, [editingCategory, selected]);\r\n\r\n  const handleSave = async () => {\r\n    await update({\r\n      token: token.access,\r\n      id: editingCategory.id,\r\n      data: {\r\n        name: categoryName,\r\n        parent_category: parentCategory.id,\r\n      },\r\n    });\r\n\r\n    handleToast.SuccessToast(`Category updated successfully`);\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    handleClose();\r\n\r\n    showDel(editingCategory);\r\n  };\r\n\r\n  return (\r\n<Modal\r\n        size=\"lg\"\r\n        fullscreen=\"md-down\" \r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      show={show}\r\n      onHide={handleClose}\r\n    >\r\n      <Modal.Body\r\n        className=\"bg-light-green\"\r\n        style={{ borderRadius: \"25px\", overflow: \"hidden\" }}\r\n      >\r\n        <h4>{isEditing ? \"Edit Category\" : \"Create a Category\"}</h4>\r\n        <form method=\"post\" encType=\"multipart/form-data\">\r\n          <div className=\"mb-3\">\r\n            <div className=\"row mx-0 px-3\">\r\n              <div className=\"col-12 m-0\">\r\n                <label htmlFor=\"category\" className=\"form-label\">\r\n                  Category Name\r\n                </label>\r\n                <input\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  className=\"form-control m-0\"\r\n                  value={categoryName}\r\n                  onChange={(e) => setCategoryName(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <label htmlFor=\"parent_category\" className=\"form-label\">\r\n                  parent_category Category\r\n                </label>\r\n\r\n                <div className=\"dropdown\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"All\"\r\n                    value={parentCategory.name}\r\n                    readOnly\r\n                  />\r\n                  <div\r\n                    className=\"dropdown-content\"\r\n                    style={{ height: \"200px\", overflow: \"auto\" }}\r\n                  >\r\n                    <span className=\"h6  \">\r\n                      <span\r\n                        className=\"hover-span text-muted\"\r\n                        onClick={() => setParentCategory({ name: \"\", id: \"\" })}\r\n                      >\r\n                        Null\r\n                      </span>\r\n                    </span>\r\n                    {data.length > 0 &&\r\n                      data.map((item: any, index: any) => (\r\n                        <span className=\"h6  \" key={item.name}>\r\n                          <span\r\n                            className=\"hover-span \"\r\n                            onClick={() => setParentCategory(item)}\r\n                          >\r\n                            {item.name}\r\n                          </span>\r\n                        </span>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 row justify-content-evenly m-0\">\r\n                <label\r\n                  style={{ height: \"33px\" }}\r\n                  htmlFor=\"category\"\r\n                  className=\"invisible\"\r\n                >\r\n                  Actions\r\n                </label>\r\n                {isEditing && (\r\n                  <button\r\n                    onClick={handleDelete}\r\n                    className=\"btn btn-danger col-3 px-3 fw-bold\"\r\n                    type=\"button\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                )}\r\n                <button\r\n                  onClick={handleClose}\r\n                  className=\"btn btn-light border border-2 border-dark col-3 px-3 fw-bold\"\r\n                  type=\"button\"\r\n                >\r\n                  Close\r\n                </button>\r\n                <button\r\n                  onClick={handleSave}\r\n                  className=\"btn btn-dark col-3 px-3 fw-bold\"\r\n                  type=\"button\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default NewCategoryModal;\r\n","import React, { useState } from \"react\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { Categoryarray2 } from \"../../DummyData/TableData\";\r\nimport NewCategoryModal from \"../ui/Modals/NewCategoryModal/NewCategoryModal\";\r\nimport DeleteModal from \"../../pages/UploadScript/DeleteModal\";\r\n\r\nconst RenderTree = (data: any, token: any, level = 0) => {\r\n  const [expandedCategories, setExpandedCategories] = useState<string[]>([]);\r\n  const [selected, setSelected] = useState(\"\");\r\n  const [selectedPERnt, setSelectedPREnt] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [editingCategory, setEditingCategory] = useState<string | null>(null);\r\n  const [editingCategoryid, setEditingCategoryid] = useState<string | null>(\r\n    null\r\n  );\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setEditingCategory(null);\r\n  };\r\n\r\n  const handleShow = (value: any) => {\r\n    setSelected(value);\r\n    setShow(true);\r\n  };\r\n\r\n  const toggleExpand = (name: string) => {\r\n    setExpandedCategories((prev) =>\r\n      prev.includes(name)\r\n        ? prev.filter((category) => category !== name)\r\n        : [...prev, name]\r\n    );\r\n  };\r\n\r\n  const startEditing = (name: any, value: any) => {\r\n    setEditingCategory(name);\r\n    setSelectedPREnt(value);\r\n\r\n    handleShow(name);\r\n  };\r\n\r\n  const [del, setDel] = useState(false);\r\n  const [delvalue, setDelete] = useState({});\r\n  const showDel = (valuee: any) => {\r\n    setDelete(valuee);\r\n    setDel(true);\r\n  };\r\n  return (\r\n    <>\r\n      <ul className=\"tree-class\">\r\n        {data.map((item: any, index: any) => (\r\n          <li key={index}>\r\n            <div>\r\n              <span\r\n                onClick={() => toggleExpand(item.name)}\r\n                style={{ cursor: \"pointer\" }}\r\n              >\r\n                {item.name}\r\n                <FaEdit\r\n                  onClick={(e: any) => {\r\n                    e.stopPropagation();\r\n                    startEditing(item, { name: \"\", id: \"\" });\r\n                  }}\r\n                  style={{ marginLeft: \"8px\", cursor: \"pointer\" }}\r\n                />\r\n              </span>\r\n              {expandedCategories.includes(item.name) && item.subcategories && (\r\n                <ul>\r\n                  {item.subcategories.map((innerItem: any, innerIndex: any) => (\r\n                    <li key={innerIndex}>\r\n                      <span\r\n                        onClick={() => toggleExpand(innerItem.name)}\r\n                        style={{ cursor: \"pointer\" }}\r\n                      >\r\n                        {innerItem.name}\r\n                        <FaEdit\r\n                          onClick={(e: any) => {\r\n                            e.stopPropagation();\r\n                            startEditing(innerItem, item);\r\n                          }}\r\n                          style={{ marginLeft: \"8px\", cursor: \"pointer\" }}\r\n                        />\r\n                      </span>\r\n                      {expandedCategories.includes(innerItem.name) &&\r\n                        innerItem.subcategories && (\r\n                          <ul>\r\n                            {innerItem.subcategories.map(\r\n                              (subinnerItem: any, subinnerIndex: any) => (\r\n                                <li key={subinnerIndex}>\r\n                                  <span\r\n                                    onClick={() =>\r\n                                      startEditing(\r\n                                        { name: subinnerItem.name },\r\n                                        innerItem\r\n                                      )\r\n                                    }\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                  >\r\n                                    {subinnerItem.name}\r\n                                  </span>\r\n                                </li>\r\n                              )\r\n                            )}\r\n                          </ul>\r\n                        )}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <NewCategoryModal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        selected={selected}\r\n        selectedPERnt={selectedPERnt}\r\n        editingCategory={editingCategory}\r\n        data={data}\r\n        token={token}\r\n        showDel={showDel}\r\n      />\r\n\r\n      <DeleteModal\r\n        show={del}\r\n        handleClose={() => setDel(false)}\r\n        token={token}\r\n        data={delvalue}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst CategoryTree = ({ categoryFilter, token }: any) => {\r\n  return (\r\n    <div className=\"category-tree mx-auto col-3\">\r\n      <h3>Category Tree</h3>\r\n      {RenderTree(categoryFilter, token)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryTree;\r\n","import React, { useEffect, useState } from 'react'\r\nimport OrgChartTree from '../../Comopnent/Charts/TreeChart'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Icon from '../../Comopnent/ui/icon/Icon'\r\nimport { useGetAllCategoryQuery } from '../../Redux/CategoryQuery'\r\n \r\n\r\nconst CategoryManger = () => {\r\n  \r\n  \r\n  const [loginUser, setLoginUser] = useState<any>(JSON.parse(localStorage.getItem(\"login\") as any));\r\n  \r\n  // Effect to retrieve loginUser from localStorage on component mount\r\n  useEffect(() => {\r\n    const storedLoginUser = localStorage.getItem(\"login\");\r\n    // Check if storedLoginUser is not null before parsing\r\n    if (storedLoginUser) {\r\n      setLoginUser(JSON.parse(storedLoginUser)); // Set the loginUser state if it's available\r\n    }\r\n  }, []);\r\n \r\n  \r\n  const Navigate =useNavigate()\r\n  const { data: AllCategory, isError } = useGetAllCategoryQuery({ token: loginUser.access });\r\n  const categoryData =  AllCategory?.results || [];\r\n  const [categoryFilter,setCategoryFilter ]=useState<any>([])\r\nuseEffect(() => {\r\n  const categoryMap: any = {};\r\n  // Initialize categories in the map\r\n  categoryData.forEach((cat: any) => {\r\n    categoryMap[cat.id] = { ...cat, subcategories: [] };\r\n  });\r\n  // Populate the subcategories\r\n  categoryData.forEach((cat: any) => {\r\n    if (cat.parent_category === null) {\r\n      // Root category, do nothing here\r\n    } else {\r\n      // Find the parent category and add the current category as a subcategory\r\n      const parent:any = Object.values(categoryMap).find(\r\n        (parentCat: any) => parentCat.id === cat.parent_category\r\n      );\r\n      if (parent) {\r\n        parent.subcategories.push(categoryMap[cat.id]);\r\n      }\r\n    }\r\n  });\r\n\r\n  // Extract root categories\r\n  const structuredCategories = Object.values(categoryMap).filter(\r\n    (cat: any) => cat.parent_category === null\r\n  );\r\n \r\n \r\n\r\n  setCategoryFilter(structuredCategories);\r\n\r\n}, [categoryData]);\r\n\r\n  return (\r\n    <div className='m-4'>\r\n         <div className=\"d-flex justify-content-start flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-2 text-center\">\r\n       <button className='btn mb-3' onClick={()=>Navigate(-1)}><Icon icon='ArrowBack'size='45px'  color=\"dark\"/></button> <h3 className=\"h1 fw-bold\">Category manager</h3>\r\n      </div>\r\n        <OrgChartTree categoryFilter={categoryFilter} token={loginUser}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryManger","import { FC, useState, useEffect } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n \r\nimport { log } from \"console\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useRemoveMutation } from \"../../Redux/CategoryQuery\";\r\nimport useToast from \"../../customHook/toast\";\r\n \r\ninterface DeleteModalProps {\r\n  show: boolean;\r\n  handleClose: () => void;\r\n  token:any;\r\n  data:any;\r\n}\r\n\r\nconst DeleteModal: FC<DeleteModalProps> = ({\r\n  show,\r\n  handleClose,\r\n  data,\r\n  token\r\n}) => {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch=useDispatch()\r\n  const [remove, delete_res] = useRemoveMutation();\r\n \r\n  \r\n  const handleToast=useToast()\r\n  const handleDelete =async () => {\r\n \r\n    \r\n  await  remove({token:token.access,id:data?.id  })\r\n  handleToast.SuccessToast(`Category delete successfully`);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n<Modal\r\n        size=\"lg\"\r\n        fullscreen=\"md-down\" \r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n      show={show}\r\n      onHide={handleClose}\r\n    >\r\n    <Modal.Body\r\n        className=\"bg-light-green\"\r\n        style={{ borderRadius: \"25px\", overflow: \"hidden\" }}\r\n      >  \r\n      \r\n   \r\n   \r\n          <div className=\"mb-3\">\r\n            <div className=\"row mx-0 px-3\">\r\n              <div className=\"col-12 m-0\">\r\n              </div>\r\n              <div className=\"col-12  \">\r\n                 \r\n                  <h4>Delete Category</h4>\r\n      <p>Are you sure you want to delete {data.name} category?</p>\r\n\r\n               \r\n                </div>\r\n              <div className=\"col-12 row justify-content-evenly m-0\">\r\n                <label\r\n                  style={{ height: \"33px\" }}\r\n                  htmlFor=\"category\"\r\n                  className=\"invisible\"\r\n                >\r\n                  Actions\r\n                </label>\r\n               \r\n                  <button\r\n                    onClick={handleDelete}\r\n                    className=\"btn btn-danger col-3 px-3 fw-bold\"\r\n                    type=\"button\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                \r\n                <button\r\n                  onClick={handleClose}\r\n                  className=\"btn btn-light border border-2 border-dark col-3 px-3 fw-bold\"\r\n                  type=\"button\"\r\n                >\r\n                  Close\r\n                </button>\r\n            \r\n              </div>\r\n            </div>\r\n          </div>\r\n      \r\n            \r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteModal;\r\n"],"names":["_ref","show","selected","handleClose","data","editingCategory","token","selectedPERnt","showDel","useNavigate","update","update_res","useUpdateMutation","handleToast","useToast","categoryName","setCategoryName","useState","parentCategory","setParentCategory","isEditing","setIsEditing","useEffect","name","_jsx","Modal","size","fullscreen","centered","onHide","children","_jsxs","Body","className","style","borderRadius","overflow","method","encType","htmlFor","id","value","onChange","e","target","required","type","placeholder","readOnly","height","onClick","length","map","item","index","async","access","parent_category","SuccessToast","RenderTree","expandedCategories","setExpandedCategories","setSelected","setSelectedPREnt","setShow","setEditingCategory","editingCategoryid","setEditingCategoryid","toggleExpand","prev","includes","filter","category","startEditing","handleShow","del","setDel","delvalue","setDelete","_Fragment","cursor","FaEdit","stopPropagation","marginLeft","subcategories","innerItem","innerIndex","subinnerItem","subinnerIndex","NewCategoryModal","valuee","DeleteModal","categoryFilter","CategoryManger","loginUser","setLoginUser","JSON","parse","localStorage","getItem","storedLoginUser","Navigate","AllCategory","isError","useGetAllCategoryQuery","categoryData","results","setCategoryFilter","categoryMap","forEach","cat","parent","Object","values","find","parentCat","push","structuredCategories","Icon","icon","color","OrgChartTree","useDispatch","remove","delete_res","useRemoveMutation"],"sourceRoot":""}