{"version":3,"file":"static/js/571.ba73e590.chunk.js","mappings":"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","sources":["Comopnent/ui/Modals/NewCategoryModal/NewCategoryModal.tsx","Comopnent/Charts/TreeChart.tsx","pages/UploadScript/CategoryManger.tsx","pages/UploadScript/DeleteModal.tsx"],"sourcesContent":["import { FC, useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  useRemoveMutation,\n  useUpdateMutation,\n} from \"../../../../Redux/CategoryQuery\";\nimport { log } from \"console\";\nimport useToast from \"../../../../customHook/toast\";\nimport DeleteModal from \"../DeleteModal/DeleteModal\";\n\ninterface NewCategoryModalProps {\n  show: boolean;\n  handleClose: () => void;\n  selected: string;\n  editingCategory: any | null;\n  token: any;\n  data: any;\n  selectedPERnt: any;\n  showDel: any;\n}\n\nconst NewCategoryModal: FC<NewCategoryModalProps> = ({\n  show,\n  selected,\n  handleClose,\n  data,\n  editingCategory,\n  token,\n  selectedPERnt,\n  showDel,\n}) => {\n  const navigate = useNavigate();\n  const [update, update_res] = useUpdateMutation();\n\n  const handleToast = useToast();\n\n  const [categoryName, setCategoryName] = useState(selected);\n  const [parentCategory, setParentCategory] = useState(selectedPERnt);\n  const [isEditing, setIsEditing] = useState(false);\n\n\n  useEffect(() => {\n    if (editingCategory) {\n      setCategoryName(editingCategory.name);\n      setParentCategory(selectedPERnt);\n      setIsEditing(true);\n    } else {\n      setCategoryName(\"\");\n      setIsEditing(false);\n    }\n  }, [editingCategory, selected]);\n\n  const handleSave = async () => {\n    await update({\n      token: token.access,\n      id: editingCategory.id,\n      data: {\n        name: categoryName,\n        parent_category: parentCategory.id,\n      },\n    });\n\n    handleToast.SuccessToast(`Category updated successfully`);\n\n    handleClose();\n  };\n\n  const handleDelete = async () => {\n    handleClose();\n\n    showDel(editingCategory);\n  };\n\n  return (\n<Modal\n        size=\"lg\"\n        fullscreen=\"md-down\" \n        aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={show}\n      onHide={handleClose}\n    >\n      <Modal.Body\n        className=\"bg-light-green\"\n        style={{ borderRadius: \"25px\", overflow: \"hidden\" }}\n      >\n        <h4>{isEditing ? \"Edit Category\" : \"Create a Category\"}</h4>\n        <form method=\"post\" encType=\"multipart/form-data\">\n          <div className=\"mb-3\">\n            <div className=\"row mx-0 px-3\">\n              <div className=\"col-12 m-0\">\n                <label htmlFor=\"category\" className=\"form-label\">\n                  Category Name\n                </label>\n                <input\n                  id=\"category\"\n                  name=\"category\"\n                  className=\"form-control m-0\"\n                  value={categoryName}\n                  onChange={(e) => setCategoryName(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-12\">\n                <label htmlFor=\"parent_category\" className=\"form-label\">\n                  parent_category Category\n                </label>\n\n                <div className=\"dropdown\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"All\"\n                    value={parentCategory.name}\n                    readOnly\n                  />\n                  <div\n                    className=\"dropdown-content\"\n                    style={{ height: \"200px\", overflow: \"auto\" }}\n                  >\n                    <span className=\"h6  \">\n                      <span\n                        className=\"hover-span text-muted\"\n                        onClick={() => setParentCategory({ name: \"\", id: \"\" })}\n                      >\n                        Null\n                      </span>\n                    </span>\n                    {data.length > 0 &&\n                      data.map((item: any, index: any) => (\n                        <span className=\"h6  \" key={item.name}>\n                          <span\n                            className=\"hover-span \"\n                            onClick={() => setParentCategory(item)}\n                          >\n                            {item.name}\n                          </span>\n                        </span>\n                      ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-12 row justify-content-evenly m-0\">\n                <label\n                  style={{ height: \"33px\" }}\n                  htmlFor=\"category\"\n                  className=\"invisible\"\n                >\n                  Actions\n                </label>\n                {isEditing && (\n                  <button\n                    onClick={handleDelete}\n                    className=\"btn btn-danger col-3 px-3 fw-bold\"\n                    type=\"button\"\n                  >\n                    Delete\n                  </button>\n                )}\n                <button\n                  onClick={handleClose}\n                  className=\"btn btn-light border border-2 border-dark col-3 px-3 fw-bold\"\n                  type=\"button\"\n                >\n                  Close\n                </button>\n                <button\n                  onClick={handleSave}\n                  className=\"btn btn-dark col-3 px-3 fw-bold\"\n                  type=\"button\"\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default NewCategoryModal;\n","import React, { useState } from \"react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { Categoryarray2 } from \"../../DummyData/TableData\";\nimport NewCategoryModal from \"../ui/Modals/NewCategoryModal/NewCategoryModal\";\nimport DeleteModal from \"../../pages/UploadScript/DeleteModal\";\n\nconst RenderTree = (data: any, token: any, level = 0) => {\n  const [expandedCategories, setExpandedCategories] = useState<string[]>([]);\n  const [selected, setSelected] = useState(\"\");\n  const [selectedPERnt, setSelectedPREnt] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [editingCategory, setEditingCategory] = useState<string | null>(null);\n  const [editingCategoryid, setEditingCategoryid] = useState<string | null>(\n    null\n  );\n\n  const handleClose = () => {\n    setShow(false);\n    setEditingCategory(null);\n  };\n\n  const handleShow = (value: any) => {\n    setSelected(value);\n    setShow(true);\n  };\n\n  const toggleExpand = (name: string) => {\n    setExpandedCategories((prev) =>\n      prev.includes(name)\n        ? prev.filter((category) => category !== name)\n        : [...prev, name]\n    );\n  };\n\n  const startEditing = (name: any, value: any) => {\n    setEditingCategory(name);\n    setSelectedPREnt(value);\n\n    handleShow(name);\n  };\n\n  const [del, setDel] = useState(false);\n  const [delvalue, setDelete] = useState({});\n  const showDel = (valuee: any) => {\n    setDelete(valuee);\n    setDel(true);\n  };\n  return (\n    <>\n      <ul className=\"tree-class\">\n        {data.map((item: any, index: any) => (\n          <li key={index}>\n            <div>\n              <span\n                onClick={() => toggleExpand(item.name)}\n                style={{ cursor: \"pointer\" }}\n              >\n                {item.name}\n                <FaEdit\n                  onClick={(e: any) => {\n                    e.stopPropagation();\n                    startEditing(item, { name: \"\", id: \"\" });\n                  }}\n                  style={{ marginLeft: \"8px\", cursor: \"pointer\" }}\n                />\n              </span>\n              {expandedCategories.includes(item.name) && item.subcategories && (\n                <ul>\n                  {item.subcategories.map((innerItem: any, innerIndex: any) => (\n                    <li key={innerIndex}>\n                      <span\n                        onClick={() => toggleExpand(innerItem.name)}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        {innerItem.name}\n                        <FaEdit\n                          onClick={(e: any) => {\n                            e.stopPropagation();\n                            startEditing(innerItem, item);\n                          }}\n                          style={{ marginLeft: \"8px\", cursor: \"pointer\" }}\n                        />\n                      </span>\n                      {expandedCategories.includes(innerItem.name) &&\n                        innerItem.subcategories && (\n                          <ul>\n                            {innerItem.subcategories.map(\n                              (subinnerItem: any, subinnerIndex: any) => (\n                                <li key={subinnerIndex}>\n                                  <span\n                                    onClick={() =>\n                                      startEditing(\n                                        { name: subinnerItem.name },\n                                        innerItem\n                                      )\n                                    }\n                                    style={{ cursor: \"pointer\" }}\n                                  >\n                                    {subinnerItem.name}\n                                  </span>\n                                </li>\n                              )\n                            )}\n                          </ul>\n                        )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n      <NewCategoryModal\n        show={show}\n        handleClose={handleClose}\n        selected={selected}\n        selectedPERnt={selectedPERnt}\n        editingCategory={editingCategory}\n        data={data}\n        token={token}\n        showDel={showDel}\n      />\n\n      <DeleteModal\n        show={del}\n        handleClose={() => setDel(false)}\n        token={token}\n        data={delvalue}\n      />\n    </>\n  );\n};\n\nconst CategoryTree = ({ categoryFilter, token }: any) => {\n  return (\n    <div className=\"category-tree mx-auto col-3\">\n      <h3>Category Tree</h3>\n      {RenderTree(categoryFilter, token)}\n    </div>\n  );\n};\n\nexport default CategoryTree;\n","import React, { useEffect, useState } from \"react\";\nimport OrgChartTree from \"../../Comopnent/Charts/TreeChart\";\nimport { useNavigate } from \"react-router-dom\";\nimport Icon from \"../../Comopnent/ui/icon/Icon\";\nimport { useGetAllCategoryQuery } from \"../../Redux/CategoryQuery\";\n\nconst CategoryManger = () => {\n  const [loginUser, setLoginUser] = useState<any>(\n    JSON.parse(localStorage.getItem(\"login\") as any)\n  );\n\n  // Effect to retrieve loginUser from localStorage on component mount\n  useEffect(() => {\n    const storedLoginUser = localStorage.getItem(\"login\");\n    // Check if storedLoginUser is not null before parsing\n    if (storedLoginUser) {\n      setLoginUser(JSON.parse(storedLoginUser)); // Set the loginUser state if it's available\n    }\n  }, []);\n\n  const Navigate = useNavigate();\n  const { data: AllCategory, isError } = useGetAllCategoryQuery({\n    token: loginUser.access,\n  });\n  const categoryData = AllCategory?.results || [];\n  const [categoryFilter, setCategoryFilter] = useState<any>([]);\n  useEffect(() => {\n    const categoryMap: any = {};\n    // Initialize categories in the map\n    categoryData.forEach((cat: any) => {\n      categoryMap[cat.id] = { ...cat, subcategories: [] };\n    });\n    // Populate the subcategories\n    categoryData.forEach((cat: any) => {\n      if (cat.parent_category === null) {\n        // Root category, do nothing here\n      } else {\n        // Find the parent category and add the current category as a subcategory\n        const parent: any = Object.values(categoryMap).find(\n          (parentCat: any) => parentCat.id === cat.parent_category\n        );\n        if (parent) {\n          parent.subcategories.push(categoryMap[cat.id]);\n        }\n      }\n    });\n\n    // Extract root categories\n    const structuredCategories = Object.values(categoryMap).filter(\n      (cat: any) => cat.parent_category === null\n    );\n\n    setCategoryFilter(structuredCategories);\n  }, [categoryData]);\n\n  return (\n    <div className=\"m-4\">\n      <div className=\"d-flex justify-content-start flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-2 text-center\">\n        <button className=\"btn mb-3\" onClick={() => Navigate(-1)}>\n          <Icon icon=\"ArrowBack\" size=\"45px\" color=\"dark\" />\n        </button>{\" \"}\n        <h3 className=\"h1 fw-bold\">Category manager</h3>\n      </div>\n      <OrgChartTree categoryFilter={categoryFilter} token={loginUser} />\n    </div>\n  );\n};\n\nexport default CategoryManger;\n","import { FC, useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { log } from \"console\";\nimport { useDispatch } from \"react-redux\";\nimport { useRemoveMutation } from \"../../Redux/CategoryQuery\";\nimport useToast from \"../../customHook/toast\";\n\ninterface DeleteModalProps {\n  show: boolean;\n  handleClose: () => void;\n  token: any;\n  data: any;\n}\n\nconst DeleteModal: FC<DeleteModalProps> = ({\n  show,\n  handleClose,\n  data,\n  token,\n}) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [remove, delete_res] = useRemoveMutation();\n\n  const handleToast = useToast();\n  const handleDelete = async () => {\n    await remove({ token: token.access, id: data?.id });\n    handleToast.SuccessToast(`Category delete successfully`);\n    handleClose();\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      fullscreen=\"md-down\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={show}\n      onHide={handleClose}\n    >\n      <Modal.Body\n        className=\"bg-light-green\"\n        style={{ borderRadius: \"25px\", overflow: \"hidden\" }}\n      >\n        <div className=\"mb-3\">\n          <div className=\"row mx-0 px-3\">\n            <div className=\"col-12 m-0\"></div>\n            <div className=\"col-12  \">\n              <h4>Delete Category</h4>\n              <p>Are you sure you want to delete {data.name} category?</p>\n            </div>\n            <div className=\"col-12 row justify-content-evenly m-0\">\n              <label\n                style={{ height: \"33px\" }}\n                htmlFor=\"category\"\n                className=\"invisible\"\n              >\n                Actions\n              </label>\n\n              <button\n                onClick={handleDelete}\n                className=\"btn btn-danger col-3 px-3 fw-bold\"\n                type=\"button\"\n              >\n                Delete\n              </button>\n\n              <button\n                onClick={handleClose}\n                className=\"btn btn-light border border-2 border-dark col-3 px-3 fw-bold\"\n                type=\"button\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default DeleteModal;\n"],"names":["_ref","show","selected","handleClose","data","editingCategory","token","selectedPERnt","showDel","useNavigate","update","update_res","useUpdateMutation","handleToast","useToast","categoryName","setCategoryName","useState","parentCategory","setParentCategory","isEditing","setIsEditing","useEffect","name","_jsx","Modal","size","fullscreen","centered","onHide","children","_jsxs","Body","className","style","borderRadius","overflow","method","encType","htmlFor","id","value","onChange","e","target","required","type","placeholder","readOnly","height","onClick","length","map","item","index","async","access","parent_category","SuccessToast","RenderTree","expandedCategories","setExpandedCategories","setSelected","setSelectedPREnt","setShow","setEditingCategory","editingCategoryid","setEditingCategoryid","toggleExpand","prev","includes","filter","category","startEditing","handleShow","del","setDel","delvalue","setDelete","_Fragment","cursor","FaEdit","stopPropagation","marginLeft","subcategories","innerItem","innerIndex","subinnerItem","subinnerIndex","NewCategoryModal","valuee","DeleteModal","categoryFilter","CategoryManger","loginUser","setLoginUser","JSON","parse","localStorage","getItem","storedLoginUser","Navigate","AllCategory","isError","useGetAllCategoryQuery","categoryData","results","setCategoryFilter","categoryMap","forEach","cat","parent","Object","values","find","parentCat","push","structuredCategories","Icon","icon","color","OrgChartTree","useDispatch","remove","delete_res","useRemoveMutation"],"sourceRoot":""}