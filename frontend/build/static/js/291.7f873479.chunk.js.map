{"version":3,"file":"static/js/291.7f873479.chunk.js","mappings":"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","sources":["Comopnent/CodeEditer/CodeEditer.tsx","pages/AllScript/Script_Edit.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport CodeEditor from '@uiw/react-textarea-code-editor';\r\n\r\nexport default function CodeEdit({code,setCode}:any) {\r\n  \r\n  const [language, setLanguage] = useState(\"python\");\r\n\r\n  const handleLanguageChange = (event:any) => {\r\n    setLanguage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <div style={{ marginBottom: '10px' }}>\r\n        <label htmlFor=\"language-select\" style={{ marginRight: '10px' }}>Select Language:</label>\r\n        <select id=\"language-select\" value={language} onChange={handleLanguageChange}>\r\n          <option value=\"python\">Python</option>\r\n          <option value=\"javascript\">JavaScript</option>\r\n          <option value=\"java\">Java</option>\r\n \r\n        </select>\r\n      </div> */}\r\n\r\n      <CodeEditor\r\n        value={code}\r\n        language='python'\r\n        placeholder={`Please enter python code.`}\r\n        onChange={(evn:any) => setCode(evn.target.value)}\r\n        padding={15}\r\n        minHeight={300}\r\n       \r\n        data-color-mode=\"dark\"\r\n        style={{\r\n          maxHeight:\"500px\",\r\n          overflowY: 'auto',\r\n          fontFamily: 'ui-monospace, SFMono-Regular, SF Mono, Consolas, Liberation Mono, Menlo, monospace',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"../../assest/css/AllScript.css\";\r\nimport Icon from \"../../Comopnent/ui/icon/Icon\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CodeEdit from \"../../Comopnent/CodeEditer/CodeEditer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { loginUSer } from \"../../customHook/getrole\";\r\nimport useToast from \"../../customHook/toast\";\r\n\r\nconst ScriptEdit = () => {\r\n  const Navigate = useNavigate();\r\n  const store: any = useSelector((i) => i);\r\n  const ScriptData = store?.script?.Script;\r\n  const handleToast = useToast();\r\n  const [code, setCode] = useState(\"\");\r\n  const [description, setDescription] = useState(ScriptData?.description || \"\");\r\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\n  const handleGetFile = () => {\r\n    const url = ScriptData?.file; // Replace with your file URL\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    xhr.open(\"GET\", url, true);\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === 4 && xhr.status === 200) {\r\n        setCode(xhr.responseText); // File content\r\n      }\r\n    };\r\n    xhr.send();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch the code from the provided URL\r\n    handleGetFile();\r\n  }, [ScriptData]);\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    const blob = new Blob([code], { type: \"text/plain\" });\r\n    formData.append(\"file\", blob, `${ScriptData?.name}.py`);\r\n    formData.append(\"description\", description);\r\n\r\n    try {\r\n      const response = await axios.patch(\r\n        `${process.env.REACT_APP_API_URL}api/scripts/${ScriptData?.id}`, // Use the correct ID\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${loginUSer?.access}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        Navigate(`/account/ScriptDetails/${ScriptData?.id}`);\r\n        handleToast.SuccessToast(`New Category added successfully`);\r\n        // Navigate after successful update\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating script:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"m-4\">\r\n        <div className=\"d-flex flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-2 text-center\">\r\n          <button className=\"btn mb-3\" onClick={() => Navigate(-1)}>\r\n            <Icon icon=\"ArrowBack\" size=\"45px\" color=\"dark\" />\r\n          </button>{\" \"}\r\n          <h1 className=\"h1 fw-bold \">Editing ({ScriptData?.name})</h1>\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-center\">\r\n          <form\r\n            className=\"w-75\"\r\n            onSubmit={handleSubmit}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"Description\" className=\"form-label\">\r\n                Description\r\n              </label>\r\n              <textarea\r\n                rows={3}\r\n                id=\"Description\"\r\n                name=\"Description\"\r\n                className=\"form-control\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"Code\" className=\"form-label\">\r\n                Code\r\n              </label>\r\n              <CodeEdit code={code} setCode={setCode} />\r\n            </div>\r\n\r\n            <div className=\"mx-auto text-center\">\r\n              <button type=\"submit\" className=\"btn btn-dark px-5\">\r\n                Save Changes\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScriptEdit;\r\n"],"names":["CodeEdit","_ref","code","setCode","language","setLanguage","useState","_jsx","children","CodeEditor","value","placeholder","onChange","evn","target","padding","minHeight","style","maxHeight","overflowY","fontFamily","ScriptEdit","_store$script","Navigate","useNavigate","store","useSelector","i","ScriptData","script","Script","handleToast","useToast","description","setDescription","useEffect","handleGetFile","url","file","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","send","_Fragment","_jsxs","className","onClick","Icon","icon","size","color","name","onSubmit","async","e","preventDefault","formData","FormData","blob","Blob","type","append","axios","patch","id","headers","Authorization","loginUSer","access","SuccessToast","error","console","encType","htmlFor","rows","required"],"sourceRoot":""}