{"version":3,"file":"static/js/291.7f873479.chunk.js","mappings":"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","sources":["Comopnent/CodeEditer/CodeEditer.tsx","pages/AllScript/Script_Edit.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CodeEditor from '@uiw/react-textarea-code-editor';\n\nexport default function CodeEdit({code,setCode}:any) {\n  \n  const [language, setLanguage] = useState(\"python\");\n\n  const handleLanguageChange = (event:any) => {\n    setLanguage(event.target.value);\n  };\n\n  return (\n    <div>\n      {/* <div style={{ marginBottom: '10px' }}>\n        <label htmlFor=\"language-select\" style={{ marginRight: '10px' }}>Select Language:</label>\n        <select id=\"language-select\" value={language} onChange={handleLanguageChange}>\n          <option value=\"python\">Python</option>\n          <option value=\"javascript\">JavaScript</option>\n          <option value=\"java\">Java</option>\n \n        </select>\n      </div> */}\n\n      <CodeEditor\n        value={code}\n        language='python'\n        placeholder={`Please enter python code.`}\n        onChange={(evn:any) => setCode(evn.target.value)}\n        padding={15}\n        minHeight={300}\n       \n        data-color-mode=\"dark\"\n        style={{\n          maxHeight:\"500px\",\n          overflowY: 'auto',\n          fontFamily: 'ui-monospace, SFMono-Regular, SF Mono, Consolas, Liberation Mono, Menlo, monospace',\n        }}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"../../assest/css/AllScript.css\";\nimport Icon from \"../../Comopnent/ui/icon/Icon\";\nimport { useNavigate } from \"react-router-dom\";\nimport CodeEdit from \"../../Comopnent/CodeEditer/CodeEditer\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { loginUSer } from \"../../customHook/getrole\";\nimport useToast from \"../../customHook/toast\";\n\nconst ScriptEdit = () => {\n  const Navigate = useNavigate();\n  const store: any = useSelector((i) => i);\n  const ScriptData = store?.script?.Script;\n  const handleToast = useToast();\n  const [code, setCode] = useState(\"\");\n  const [description, setDescription] = useState(ScriptData?.description || \"\");\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n\n  const handleGetFile = () => {\n    const url = ScriptData?.file; // Replace with your file URL\n    const xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", url, true);\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        setCode(xhr.responseText); // File content\n      }\n    };\n    xhr.send();\n  };\n\n  useEffect(() => {\n    // Fetch the code from the provided URL\n    handleGetFile();\n  }, [ScriptData]);\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    const blob = new Blob([code], { type: \"text/plain\" });\n    formData.append(\"file\", blob, `${ScriptData?.name}.py`);\n    formData.append(\"description\", description);\n\n    try {\n      const response = await axios.patch(\n        `${process.env.REACT_APP_API_URL}api/scripts/${ScriptData?.id}`, // Use the correct ID\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n            Authorization: `Bearer ${loginUSer?.access}`,\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        Navigate(`/account/ScriptDetails/${ScriptData?.id}`);\n        handleToast.SuccessToast(`New Category added successfully`);\n        // Navigate after successful update\n      }\n    } catch (error) {\n      console.error(\"Error updating script:\", error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"m-4\">\n        <div className=\"d-flex flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-2 text-center\">\n          <button className=\"btn mb-3\" onClick={() => Navigate(-1)}>\n            <Icon icon=\"ArrowBack\" size=\"45px\" color=\"dark\" />\n          </button>{\" \"}\n          <h1 className=\"h1 fw-bold \">Editing ({ScriptData?.name})</h1>\n        </div>\n\n        <div className=\"d-flex justify-content-center\">\n          <form\n            className=\"w-75\"\n            onSubmit={handleSubmit}\n            encType=\"multipart/form-data\"\n          >\n            <div className=\"mb-3\">\n              <label htmlFor=\"Description\" className=\"form-label\">\n                Description\n              </label>\n              <textarea\n                rows={3}\n                id=\"Description\"\n                name=\"Description\"\n                className=\"form-control\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                required\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"Code\" className=\"form-label\">\n                Code\n              </label>\n              <CodeEdit code={code} setCode={setCode} />\n            </div>\n\n            <div className=\"mx-auto text-center\">\n              <button type=\"submit\" className=\"btn btn-dark px-5\">\n                Save Changes\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ScriptEdit;\n"],"names":["CodeEdit","_ref","code","setCode","language","setLanguage","useState","_jsx","children","CodeEditor","value","placeholder","onChange","evn","target","padding","minHeight","style","maxHeight","overflowY","fontFamily","ScriptEdit","_store$script","Navigate","useNavigate","store","useSelector","i","ScriptData","script","Script","handleToast","useToast","description","setDescription","useEffect","handleGetFile","url","file","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","responseText","send","_Fragment","_jsxs","className","onClick","Icon","icon","size","color","name","onSubmit","async","e","preventDefault","formData","FormData","blob","Blob","type","append","axios","patch","id","headers","Authorization","loginUSer","access","SuccessToast","error","console","encType","htmlFor","rows","required"],"sourceRoot":""}