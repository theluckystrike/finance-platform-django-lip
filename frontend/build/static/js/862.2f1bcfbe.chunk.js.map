{"version":3,"file":"static/js/862.2f1bcfbe.chunk.js","mappings":"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","sources":["Comopnent/ui/Modals/NewCategoryModal/NewCategoryModal.tsx","Comopnent/Charts/ScriptChart.tsx","pages/AllScript/ScriptTree.tsx"],"sourcesContent":["import { FC, useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRemoveMutation, useUpdateMutation } from \"../../../../Redux/CategoryQuery\";\nimport { log } from \"console\";\n\ninterface NewCategoryModalProps {\n  show: boolean;\n  handleClose: () => void;\n  selected: string;\n  editingCategory: any | null;\n  token:any;\n  data:any;\n}\n\nconst NewCategoryModal: FC<NewCategoryModalProps> = ({\n  show,\n  selected,\n  handleClose,\n  data,\n  editingCategory,\n  token\n}) => {\n  const navigate = useNavigate();\n  const [update, update_res] =\n  useUpdateMutation();\n  const [remove, delete_res] =\n  useRemoveMutation();\n  const [categoryName, setCategoryName] = useState(selected);\n  const [parentCategory, setParentCategory] = useState(\"\");\n  const [isEditing, setIsEditing] = useState(false);\nconsole.log(editingCategory);\n\n  useEffect(() => {\n    if (editingCategory) {\n      setCategoryName(editingCategory.name);\n      setIsEditing(true);\n    } else {\n      setCategoryName(\"\");\n      setIsEditing(false);\n    }\n  }, [editingCategory, selected]);\n\n  const handleSave = () => {\n    \n    \n    update({token:token.access,id:editingCategory.id, data:{\n      name:categoryName\n    } })\n    // handleClose();\n  };\n\n  const handleDelete = () => {\n    \n    remove({token:token.access,id:editingCategory.id  })\n    handleClose();\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={show}\n      onHide={handleClose}\n    >\n      <Modal.Body\n        className=\"bg-light-green\"\n        style={{ borderRadius: \"25px\", overflow: \"hidden\" }}\n      >\n        <h4>{isEditing ? \"Edit Category\" : \"Create a Category\"}</h4>\n        <form method=\"post\" encType=\"multipart/form-data\">\n          <div className=\"mb-3\">\n            <div className=\"row mx-0 px-3\">\n              <div className=\"col-12 m-0\">\n                <label htmlFor=\"category\" className=\"form-label\">\n                  Category Name\n                </label>\n                <input\n                  id=\"category\"\n                  name=\"category\"\n                  className=\"form-control m-0\"\n                  value={categoryName}\n                  onChange={(e) => setCategoryName(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"col-12\">\n                  <label htmlFor=\"parent_category\" className=\"form-label\">\n                    parent_category Category\n                  </label>\n\n                  <div className=\"dropdown\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"All\"\n                      // value={formik.values.parent_categoryName}\n                      readOnly\n                    />\n                    <div\n                      className=\"dropdown-content\"\n                      style={{ height: \"200px\", overflow: \"auto\" }}\n                    >\n                      {data.length > 0 &&\n                        data.map((item: any, index: any) => (\n                          <span className=\"h6  \" key={item.name}>\n                            <span\n                              className=\"hover-span \"\n                              // onClick={() =>\n                              //  { formik.setFieldValue(\"parent_category\", item.id)\n                              //   formik.setFieldValue(\"parent_categoryName\", item.name)\n                              //  }\n                              // }\n                            >\n                              {item.name}\n                            </span>\n                          \n                          </span>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n              <div className=\"col-12 row justify-content-evenly m-0\">\n                <label\n                  style={{ height: \"33px\" }}\n                  htmlFor=\"category\"\n                  className=\"invisible\"\n                >\n                  Actions\n                </label>\n                {isEditing && (\n                  <button\n                    onClick={handleDelete}\n                    className=\"btn btn-danger col-3 px-3 fw-bold\"\n                    type=\"button\"\n                  >\n                    Delete\n                  </button>\n                )}\n                <button\n                  onClick={handleClose}\n                  className=\"btn btn-light border border-2 border-dark col-3 px-3 fw-bold\"\n                  type=\"button\"\n                >\n                  Close\n                </button>\n                <button\n                  onClick={handleSave}\n                  className=\"btn btn-dark col-3 px-3 fw-bold\"\n                  type=\"button\"\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default NewCategoryModal;\n","import React, { useState } from \"react\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { Categoryarray2, ScriptData } from \"../../DummyData/TableData\";\nimport NewCategoryModal from \"../ui/Modals/NewCategoryModal/NewCategoryModal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ActiveRoute } from \"../../Menu\";\n\nconst RenderTree = (data: any, level = 0) => {\n  const [expandedCategories, setExpandedCategories] = useState<string[]>([]);\n  const [selected, setSelected] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [editingCategory, setEditingCategory] = useState<string | null>(null);\n\nconst navigate =useNavigate()\n\n  const handleClose = () => {\n    setShow(false);\n    setEditingCategory(null);\n  };\n\n  const handleShow = (value: any) => {\n    setSelected(value);\n    setShow(true);\n  };\n\n  const toggleExpand = (name: string) => {\n    setExpandedCategories(prev => \n      prev.includes(name) ? prev.filter(category => category !== name) : [...prev, name]\n    );\n  };\n\n  const startEditing = (name: string) => {\n    setEditingCategory(name);\n    handleShow(name);\n  };\n\n  return (\n    <>\n      <ul className=\"tree-class\">\n        {data.map((item: any, index: any) => (\n          <li key={index}>\n            <div>\n              <span\n                onClick={() => toggleExpand(item.name)}\n                style={{ cursor: 'pointer' }}\n              >\n                {item.name}\n                {/* <FaEdit\n                  onClick={(e: any) => {\n                    e.stopPropagation();\n                    startEditing(item.name);\n                  }}\n                  style={{ marginLeft: '8px', cursor: 'pointer' }}\n                /> */}\n              </span>\n              {expandedCategories.includes(item.name) && item.subcategory && (\n                <ul>\n                  {item.subcategory.map((innerItem: any, innerIndex: any) => (\n                    <li key={innerIndex}>\n                      <span\n                        onClick={() => toggleExpand(innerItem.name)}\n                        style={{ cursor: 'pointer' }}\n                      >\n                        {innerItem.name}\n                        {/* <FaEdit\n                          onClick={(e: any) => {\n                            e.stopPropagation();\n                            startEditing(innerItem.name);\n                          }}\n                          style={{ marginLeft: '8px', cursor: 'pointer' }}\n                        /> */}\n                      </span>\n                      {expandedCategories.includes(innerItem.name) && innerItem.innerCategory && (\n                        <ul>\n                          {innerItem.innerCategory.map(\n                            (subinnerItem: any, subinnerIndex: any) => (\n                              <li key={subinnerIndex}>\n                                <span\n                                onClick={() => toggleExpand(subinnerItem)}\n                                  // onClick={() => handleShow(subinnerItem)}\n                                  style={{ cursor: 'pointer' }}\n                                >\n                                  {subinnerItem}\n                                </span>\n                                {expandedCategories.includes(subinnerItem) && subinnerItem && (\n                        <ul>\n                          {ScriptData.slice(0,5).map(\n                            (scriptItem: any, scriptItemIndex: any) => (\n                              <li key={scriptItemIndex} style={{width:'200%'}}>\n                                <span\n                                  onClick={() => navigate(`/account/${ActiveRoute.ScriptDetails.path}?chartname=${scriptItem.chart}`)}\n                                  style={{ cursor: 'pointer' }}\n                                >\n                                  {scriptItem.title}\n                                </span>\n                              </li>\n                            )\n                          )}\n                        </ul>\n                      )}\n                              </li>\n                            )\n                          )}\n                        </ul>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </div>\n          </li>\n        ))}\n      </ul>\n      <NewCategoryModal\n        show={show}\n        handleClose={handleClose}\n        selected={selected}\n        editingCategory={editingCategory} \n        token={''}\n        data={''}\n      />\n    </>\n  );\n};\n\nconst ScriptChart = () => {\n  return (\n    <div className=\"category-tree mx-auto w-25\">\n      <h3>Script Tree</h3>\n      {RenderTree(Categoryarray2)}\n    </div>\n  );\n};\n\nexport default ScriptChart;\n","import React from 'react'\nimport ScriptChart from '../../Comopnent/Charts/ScriptChart'\nimport { useNavigate } from 'react-router-dom'\nimport Icon from '../../Comopnent/ui/icon/Icon'\n\nconst ScriptTree = () => {\n  const Navigate =useNavigate()\n  return (\n    <div className='m-4'>\n         <div className=\"d-flex justify-content-start flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-2 text-center\">\n       <button className='btn mb-3' onClick={()=>Navigate(-1)}><Icon icon='ArrowBack'size='45px'  color=\"dark\"/></button> <h3 className=\"h1 fw-bold\">Script Tree By Category</h3>\n      </div>\n        <ScriptChart/>\n    </div>\n  )\n}\n\nexport default ScriptTree"],"names":["_ref","show","selected","handleClose","data","editingCategory","token","useNavigate","update","update_res","useUpdateMutation","remove","delete_res","useRemoveMutation","categoryName","setCategoryName","useState","parentCategory","setParentCategory","isEditing","setIsEditing","console","log","useEffect","name","_jsx","Modal","size","centered","onHide","children","_jsxs","Body","className","style","borderRadius","overflow","method","encType","htmlFor","id","value","onChange","e","target","required","type","placeholder","readOnly","height","length","map","item","index","onClick","handleDelete","access","handleSave","RenderTree","expandedCategories","setExpandedCategories","setSelected","setShow","setEditingCategory","navigate","toggleExpand","prev","includes","filter","category","_Fragment","cursor","subcategory","innerItem","innerIndex","innerCategory","subinnerItem","subinnerIndex","ScriptData","slice","scriptItem","scriptItemIndex","width","ActiveRoute","ScriptDetails","path","chart","title","NewCategoryModal","ScriptChart","Categoryarray2","ScriptTree","Navigate","Icon","icon","color"],"sourceRoot":""}