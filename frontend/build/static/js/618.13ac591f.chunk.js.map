{"version":3,"file":"static/js/618.13ac591f.chunk.js","mappings":"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","sources":["Comopnent/ui/Modals/CategoryModal/CategoryModal.tsx","pages/UploadScript/UploadScript.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ActiveRoute } from \"../../../../Menu\";\nimport { Categoryarray } from \"../../../../DummyData/TableData\";\nimport { useCreateMutation } from \"../../../../Redux/CategoryQuery\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { loginUSer } from \"../../../../customHook/getrole\";\n\nimport { useRefreshtokenMutation } from \"../../../../Redux/AuthSlice\";\nimport useToast from \"../../../../customHook/toast\";\nimport { useSelector } from \"react-redux\";\n\ninterface CategoryModalProps {\n  show: boolean;\n  handleClose: () => void;\n  categoryFilter: any[];\n}\n\nconst CategoryModal: FC<CategoryModalProps> = ({\n  show,\n  handleClose,\n  categoryFilter,\n}) => {\n  const [create, { isLoading, isSuccess, isError, error, data }] =\n    useCreateMutation();\n  const [refreshtoken, Res] = useRefreshtokenMutation();\n\n  \n\n  const navigate = useNavigate();\n  const [selectValue, setSelectValue] = useState(\"\");\n  const handleToast = useToast();\n\n  // Formik setup\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      parent_category: \"\",\n      parent_categoryName:\"\"\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"Category name is required\"),\n    }),\n    onSubmit: (values) => {\n      // Handle form submission\n      console.log(values,'hhhhh');\n      \n      create({ token: loginUSer.access, data: values }); // Call mutation with form values\n      handleClose();\n    },\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      handleToast.SuccessToast(`New Category added successfully`);\n    }\n\n    if (isError) {\n      if ((error as any)?.data) {\n        // console.log('Calling refresh token...');\n        // refreshtoken({\n        //   token: loginUSer.refresh,\n        //   page_no: 1,name,parent_category_category\n        //   page_size: 1000,\n        // })\n        // console.log('Refresh token data:');\n        handleToast.ErrorToast(\n          \"Token is invalid or expired. Please login again.\"\n        );\n        navigate(\"/login\");\n        localStorage.removeItem(\"login\");\n        const apiError = (error as any).data as { detail?: string };\n        console.log(\"Error:\", apiError.detail || \"An unknown error occurred\");\n      } else {\n        console.log(\"An unknown error occurred.\");\n      }\n    }\n  }, [isSuccess, isError, error, data]);\n  return (\n    <>\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Body\n          className=\"bg-light-green\"\n          style={{\n            borderRadius: \"25px\",\n            overflow: \"hidden\",\n          }}\n        >\n          <form onSubmit={formik.handleSubmit} encType=\"multipart/form-data\">\n            <div className=\"mb-3\">\n              <div className=\"row mx-0 px-3\">\n                <div className=\"col-12 m-0\">\n                  <label htmlFor=\"category\" className=\"form-label\">\n                    Category Name\n                  </label>\n                  <input\n                    id=\"name\"\n                    name=\"name\"\n                    className=\"form-control m-0\"\n                    required\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                  />\n                  {formik.touched.name && formik.errors.name ? (\n                    <div className=\"text-danger\">{formik.errors.name}</div>\n                  ) : null}\n                </div>\n\n                <div className=\"col-12\">\n                  <label htmlFor=\"parent_category\" className=\"form-label\">\n                    parent_category Category\n                  </label>\n\n                  <div className=\"dropdown\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"All\"\n                      value={formik.values.parent_categoryName}\n                      readOnly\n                    />\n                    <div\n                      className=\"dropdown-content\"\n                      style={{ height: \"200px\", overflow: \"auto\" }}\n                    >\n                      {categoryFilter.length > 0 &&\n                        categoryFilter.map((item: any, index: any) => (\n                          <span className=\"h6  \" key={item.name}>\n                            <span\n                              className=\"hover-span \"\n                              onClick={() =>\n                               { formik.setFieldValue(\"parent_category\", item.id)\n                                formik.setFieldValue(\"parent_categoryName\", item.name)\n                               }\n                              }\n                            >\n                              {item.name}\n                            </span>\n                          \n                          </span>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12 row justify-content-evenly m-0\">\n                  <label\n                    style={{ height: \"33px\" }}\n                    htmlFor=\"category\"\n                    className=\"invisible\"\n                  >\n                    Last Updated\n                  </label>\n\n                  <button\n                    onClick={() =>\n                      navigate(`/account/${ActiveRoute.CategoryManager.path}`)\n                    }\n                    className=\"btn border border-dark col-5 px-3 fw-bold\"\n                    type=\"button\"\n                  >\n                    Edit All Category\n                  </button>\n                  <button\n                    className=\"btn btn-dark col-5 px-3 fw-bold\"\n                    type=\"submit\"\n                  >\n                    Apply\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default CategoryModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Icon from \"../../Comopnent/ui/icon/Icon\";\nimport CategoryModal from \"../../Comopnent/ui/Modals/CategoryModal/CategoryModal\";\nimport ArrowDown from '../../assest/image/arrow-down.png';\nimport { useGetuserbytokenQuery } from \"../../Redux/AuthSlice\";\nimport { useGetAllCategoryQuery } from \"../../Redux/CategoryQuery\";\nimport { useDispatch } from \"react-redux\";\nimport { CreateScripts } from \"../../Redux/Script/ScriptSlice\";\nimport useToast from \"../../customHook/toast\";\n\n// Define validation schema using Yup\nconst validationSchema = Yup.object({\n  category: Yup.string().required('Category is required'),\n  output_type: Yup.string().required('Output type is required'),\n  name: Yup.string().required('Script name is required'),\n  file: Yup.mixed().required('File is required'),\n});\n\nconst UploadScriptForm = () => {\n  const dispatch = useDispatch();\n  const [loginUser, setLoginUser] = useState<any>(null);\nconst fileRef:any = useRef(null)\n  // Effect to retrieve loginUser from localStorage on component mount\n  useEffect(() => {\n    const storedLoginUser = localStorage.getItem(\"login\");\n    if (storedLoginUser) {\n      setLoginUser(JSON.parse(storedLoginUser));\n    }\n  }, []);\n\n  const { data: AllCategory, isError } = useGetAllCategoryQuery({ token: loginUser?.access, page_no: 1, page_size: 1000 });\n  const categoryData = AllCategory?.results || [];\n  console.log(AllCategory,'AllCategory');\n  \n  const handleToast = useToast();\n  \n  const [categoryFilter, setCategoryFilter] = useState<any>([]);\n\n  const { data, error, isLoading } = useGetuserbytokenQuery({ token: loginUser?.access, page_no: 1, page_size: 1000 });\n  const [show, setShow] = useState(false);\n  const [selectValue, setSelectValue] = useState('');\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const formik = useFormik({\n    initialValues: {\n      category: '',\n      output_type: '',\n      name: '',\n      file: null,\n      description:'sadasd',\n      parentName:''\n    },\n    validationSchema,\n    onSubmit:async (values:any,{resetForm}) => {\n      // Create FormData object\n      const formData = new FormData();\n      formData.append('category', values.category);\n      formData.append('output_type', 'plt');\n      formData.append('name', values.name);\n      formData.append('file', values.file);\n      formData.append('description',values.description)\n      // Dispatch the action with FormData\n   await   dispatch(CreateScripts({formData,token: loginUser?.access})as any);\nresetForm()\nfileRef.current.value=''\n      handleToast.SuccessToast(`New Script added successfully`);\n    },\n  });\n\n  useEffect(() => {\n    const categoryMap: any = {};\n    categoryData.forEach((cat: any) => {\n      categoryMap[cat.id] = { ...cat, subcategories: [] };\n    });\n    categoryData.forEach((cat: any) => {\n      if (cat?.parent_category !== null) {\n        const parent:any = Object.values(categoryMap).find(\n          (parentCat: any) => parentCat.name === cat?.parent_category\n        );\n        if (parent) {\n          parent.subcategories.push(categoryMap[cat.id]);\n        }\n      }\n    });\n    const structuredCategories = Object.values(categoryMap).filter(\n      (cat: any) => cat?.parent_category === null\n    );\n \n    \n    setCategoryFilter(structuredCategories);\n  }, [categoryData]);\n\n  return (\n    <>\n      <div className=\"UploadScript_main_wrap mt-3\">\n        <h1 className=\"h1 fw-bold\">Upload a Script</h1>\n\n        <div className=\"d-flex justify-content-center\">\n          <form\n            className=\"w-75\"\n            style={{ maxWidth: \"600px\" }}\n            onSubmit={formik.handleSubmit}\n            encType=\"multipart/form-data\"\n          >\n            <div className=\"mb-3\">\n              <label htmlFor=\"category\" className=\"form-label\">Category</label>\n              <div className=\"row mx-0 p-0\">\n                <div className=\"col-11 m-0 p-0 pe-1\">\n                  <div className=\"dropdown\">\n                    <div className=\"arrow_down\">\n                      <img src={ArrowDown} alt=\"\" />\n                    </div>\n                    <input\n                      type=\"text\"\n                      placeholder=\"All\"\n                      value={formik.values.parentName}\n                      \n                      readOnly\n                      className={`form-control ${formik.touched.category && formik.errors.category ? 'input-error' : ''}`}\n                    />\n                    <div className=\"dropdown-content\" style={{ height: '200px', overflow: 'auto' }}>\n                      {categoryData.length > 0 && categoryData.map((item: any, index: any) => (\n                        <span className=\"h6 hover-span\" key={item.name} onClick={() => {\n                          formik.setFieldValue(\"parentName\", item.name)\n                          formik.setFieldValue('category', item.id)}}>\n                          {item.name}\n                         \n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n                <button\n                  className=\"btn btn-dark col col-1 p-0 justify-content-center\"\n                  type=\"button\"\n                  onClick={handleShow}\n                >\n                  <Icon icon=\"Add\" size=\"30px\" />\n                </button>\n                {formik.touched.category && formik.errors.category ? (\n                  <div className=\"error-message\">{formik.errors.category as any}</div>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"output_type\" className=\"form-label\">How would you like to view data?</label>\n              <div className=\"dropdown\">\n                <div className=\"arrow_down\">\n                  <img src={ArrowDown} alt=\"\" />\n                </div>\n                <input\n                  type=\"text\"\n                  id=\"output_type\"\n                  placeholder=\"All\"\n                  className={`form-control ${formik.touched.output_type && formik.errors.output_type ? 'input-error' : ''}`}\n                  {...formik.getFieldProps('output_type')}\n                />\n                <div className=\"dropdown-content\">\n                  <span className=\"hover-span\" onClick={() => formik.setFieldValue('output_type', 'pd')}>Chart</span>\n                  <span className=\"hover-span\" onClick={() => formik.setFieldValue('output_type', 'plt')}>Table</span>\n                  <span className=\"hover-span\" onClick={() => formik.setFieldValue('output_type', 'pd plt')}>Chart and Table</span>\n                </div>\n                {formik.touched.output_type && formik.errors.output_type ? (\n                  <div className=\"error-message\">{formik.errors.output_type as any}</div>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"name\" className=\"form-label\">Script name</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                className={`form-control ${formik.touched.name && formik.errors.name ? 'input-error' : ''}`}\n                {...formik.getFieldProps('name')}\n              />\n              {formik.touched.name && formik.errors.name ? (\n                <div className=\"error-message\">{formik.errors.name as any}</div>\n              ) : null}\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"file\" className=\"form-label\">Select a file</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                name=\"file\"\n              ref={fileRef}\n                className={`form-control ${formik.touched.file && formik.errors.file ? 'input-error' : ''}`}\n                onChange={(event: any) => formik.setFieldValue('file', event.target.files[0])}\n              />\n              {formik.touched.file && formik.errors.file ? (\n                <div className=\"error-message\">{formik.errors.file as any}</div>\n              ) : null}\n            </div>\n\n            <div className=\"mx-auto text-center d-flex justify-content-between\">\n              <button type=\"submit\" className=\"btn btn-dark px-5\">Upload</button>\n              <button\n                type=\"reset\"\n                className=\"btn btn-light bordered-button px-5\"\n                onClick={() => formik.resetForm()}\n              >\n                Reset\n              </button>\n            </div>\n          </form>\n\n          <CategoryModal show={show} handleClose={handleClose} categoryFilter={categoryData} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadScriptForm;\n"],"names":["_ref","show","handleClose","categoryFilter","create","isLoading","isSuccess","isError","error","data","useCreateMutation","refreshtoken","Res","useRefreshtokenMutation","navigate","useNavigate","selectValue","setSelectValue","useState","handleToast","useToast","formik","useFormik","initialValues","name","parent_category","parent_categoryName","validationSchema","Yup","required","onSubmit","values","console","log","token","loginUSer","access","useEffect","SuccessToast","ErrorToast","localStorage","removeItem","apiError","detail","_jsx","_Fragment","children","Modal","size","centered","onHide","Body","className","style","borderRadius","overflow","handleSubmit","encType","_jsxs","htmlFor","id","value","onChange","handleChange","onBlur","handleBlur","touched","errors","type","placeholder","readOnly","height","length","map","item","index","onClick","setFieldValue","ActiveRoute","CategoryManager","path","category","output_type","file","UploadScriptForm","dispatch","useDispatch","loginUser","setLoginUser","fileRef","useRef","storedLoginUser","getItem","JSON","parse","AllCategory","useGetAllCategoryQuery","page_no","page_size","categoryData","results","setCategoryFilter","useGetuserbytokenQuery","setShow","description","parentName","async","resetForm","formData","FormData","append","CreateScripts","current","categoryMap","forEach","cat","subcategories","parent","Object","find","parentCat","push","structuredCategories","filter","maxWidth","src","ArrowDown","alt","handleShow","Icon","icon","getFieldProps","ref","event","target","files","CategoryModal"],"sourceRoot":""}