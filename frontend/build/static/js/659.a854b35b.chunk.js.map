{"version":3,"file":"static/js/659.a854b35b.chunk.js","mappings":"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","sources":["customHook/useTImeformnt.jsx","Comopnent/ui/Modals/ScheduleEmailModal/ScheduleEmailModal.tsx","pages/Reports/ReportDelete.tsx","pages/Reports/Report_view.tsx"],"sourcesContent":["import React from 'react';\n\nconst DateFormatter = ({ isoString }) => {\n  // Format the date and time based on the locale\n  const formattedDateTime = new Date(isoString).toLocaleString();\n\n  return (\n    <>\n      {formattedDateTime}\n    </>\n  );\n};\n\nexport default DateFormatter;\n","import { FC, useEffect, useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { Createschedules, GetAllreports } from '../../../../Redux/Report/Slice';\nimport useToast from '../../../../customHook/toast';\n\ninterface ScheduleEmailModalProps {\n  show: boolean;\n  handleClose: () => void;\n}\nconst initialValues={\n  email: '',\n  report: '',\n  day:'1'\n}\nconst ScheduleEmailModal: FC<ScheduleEmailModalProps> = ({ show, handleClose }) => {\n  const dispatch = useDispatch();\n  const [loginUser, setLoginUser] = useState<any>(null);\n  const store: any = useSelector((i) => i);\n  const allreport = store?.report?.reports?.results;\nconst handleToast=useToast()\n  useEffect(() => {\n    const storedLoginUser = localStorage.getItem('login');\n    if (storedLoginUser) {\n      setLoginUser(JSON.parse(storedLoginUser));\n    }\n  }, []);\n\n  useEffect(() => {\n    const getDAta = async () => {\n      try {\n        await dispatch(GetAllreports({ token: loginUser?.access }));\n      } catch (error) {\n        console.error('Error fetching reports:', error);\n      }\n    };\n    if (loginUser?.access) {\n      getDAta();\n    }\n  }, [loginUser, dispatch]);\n\n  // Form validation schema using Yup\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email format').required('Email is required'),\n    report: Yup.string().required('Please select a report'),\n    day: Yup.string().required('Please select a day'),\n  });\n\n  // Day choices\n  const dayChoices = [\n    { value: '1', label: 'Monday' },\n    { value: '2', label: 'Tuesday' },\n    { value: '3', label: 'Wednesday' },\n    { value: '4', label: 'Thursday' },\n    { value: '5', label: 'Friday' },\n    { value: '6', label: 'Saturday' },\n    { value: '7', label: 'Sunday' },\n    { value: '*', label: 'Every Day' },\n  ];\n\n  const onSubmit=async (values:any) => {\n \nawait    dispatch(Createschedules({values:values,token:loginUser?.access}))\nhandleToast.SuccessToast(`Schedules added successfully`);\n    handleClose(); // Close the modal after submitting\n  }\n  return (\n    <>\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Body\n          className=\"bg-light-green\"\n          style={{\n            borderRadius: '25px',\n            overflow: 'hidden',\n          }}\n        >\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {() => (\n              <Form>\n                <div className=\"mb-3\">\n                  <div className=\"row mx-0 px-5\">\n                    <div className=\"col-6 m-0 px-4\">\n                      <label htmlFor=\"email\" className=\"form-label\">\n                        Email\n                      </label>\n                      <Field\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        className=\"form-control m-0\"\n                        required\n                      />\n                      <ErrorMessage\n                        name=\"email\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </div>\n\n                    <div className=\"col-6 m-0 px-4\">\n                      <label htmlFor=\"report\" className=\"form-label\">\n                        Add Reports\n                      </label>\n                      <Field\n                        as=\"select\"\n                        id=\"report\"\n                        name=\"report\"\n                        className=\"form-select m-0\"\n                        required\n                      >\n                        <option value=\"\" disabled>\n                          Select a report\n                        </option>\n                        {allreport &&\n                          allreport.map((item: any, key: any) => (\n                            <option key={key} value={item.id}>\n                              {item.name}\n                            </option>\n                          ))}\n                      </Field>\n                      <ErrorMessage\n                        name=\"report\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </div>\n                    <div className=\"col-6 m-0 px-4\">\n                      <label htmlFor=\"day\" className=\"form-label\">\n                        Day of the Week\n                      </label>\n                      <Field\n                        as=\"select\"\n                        id=\"day\"\n                        name=\"day\"\n                        className=\"form-select m-0\"\n                        required\n                      >\n                        <option value=\"\" disabled>\n                          Select a day\n                        </option>\n                        {dayChoices.map((day) => (\n                          <option key={day.value} value={day.value}>\n                            {day.label}\n                          </option>\n                        ))}\n                      </Field>\n                      <ErrorMessage\n                        name=\"day\"\n                        component=\"div\"\n                        className=\"text-danger\"\n                      />\n                    </div>\n\n\n                    <div className=\"col-6 row m-0 px-4\">\n                      <label style={{ height: '33px' }} htmlFor=\"category\" className=\"invisible\">\n                        Last Updated\n                      </label>\n                      <button className=\"btn btn-dark px-3 fw-bold form-control\" type=\"submit\">\n                        Apply\n                      </button>\n                    </div>\n\n                    <div className=\"col-12 row mt-3 px-4\">\n                      <p className=\"text-center\">All reports are sent at 12:00 PM UTC</p>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default ScheduleEmailModal;\n","import { FC, useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { log } from \"console\";\nimport { useDispatch } from \"react-redux\";\nimport { DeleteScriptByIDs } from \"../../Redux/Script/ScriptSlice\";\nimport { DeleteReportsByIDs } from \"../../Redux/Report/Slice\";\n\n\ninterface DeleteModalProps {\n  show: boolean;\n  handleClose: () => void;\n  token:any;\n  data:any;\n}\n\nconst DeleteModal: FC<DeleteModalProps> = ({\n  show,\n  handleClose,\n  data,\n  token\n}) => {\n\n  const navigate = useNavigate();\n  const dispatch=useDispatch()\n  const handleDelete = () => {\n    dispatch(DeleteReportsByIDs({token,id:data.id}))\n    handleClose();\n  };\n\n  return (\n    <Modal\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      show={show}\n      onHide={handleClose}\n    >\n    <Modal.Body\n        className=\"bg-light-green\"\n        style={{ borderRadius: \"25px\", overflow: \"hidden\" }}\n      >  \n          <div className=\"mb-3\">\n            <div className=\"row mx-0 px-3\">\n              <div className=\"col-12 m-0\">\n              </div>\n              <div className=\"col-12  \">\n                  {/* <label htmlFor=\"parent_category\" className=\"form-label\" style={{\n                    width:'400px'\n                  }}>\n                   Delete {data.name} script \n                  </label> */}\n                  <h4>Delete Report</h4>\n      <p>Are you sure you want to delete {data.name} report?</p>\n\n               \n                </div>\n              <div className=\"col-12 row justify-content-evenly m-0\">\n            \n               \n                  <button\n                    onClick={handleDelete}\n                    className=\"btn btn-danger col-3 px-3 fw-bold\"\n                    type=\"button\"\n                  >\n                    Delete\n                  </button>\n                \n                <button\n                  onClick={handleClose}\n                  className=\"btn btn-light border border-2 border-dark col-3 px-3 fw-bold\"\n                  type=\"button\"\n                >\n                  Close\n                </button>\n            \n              </div>\n            </div>\n          </div>\n      \n            \n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default DeleteModal;\n","import React, { useEffect, useState } from \"react\";\nimport \"../../assest/css/AllScript.css\";\nimport Icon from \"../../Comopnent/ui/icon/Icon\";\nimport ScheduleEmailModal from \"../../Comopnent/ui/Modals/ScheduleEmailModal/ScheduleEmailModal\";\nimport { ActiveRoute } from \"../../Menu\";\n \nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { GetAllScripts, setLoading } from \"../../Redux/Script/ScriptSlice\";\nimport { GetreportByIDs, Updatereports } from \"../../Redux/Report/Slice\";\nimport DateFormatter from \"../../customHook/useTImeformnt\";\nimport useToast from \"../../customHook/toast\";\nimport Loader from \"../../Comopnent/ui/Loader\";\nimport DeleteModal from \"./ReportDelete\";\n \n\nconst ReportViwe = () => {\n  // Get the search parameters from the URL\nconst {id} =useParams()\nconst dispatch=useDispatch()\nconst [loginUser, setLoginUser] = useState<any>(null);\n const handleToast =useToast()\n// Effect to retrieve loginUser from localStorage on component mount\nuseEffect(() => {\n  const storedLoginUser = localStorage.getItem(\"login\");\n  if (storedLoginUser) {\n    setLoginUser(JSON.parse(storedLoginUser));\n  }\n}, []);\n\n  useEffect(()=>{\n    dispatch(setLoading(true));\n    const getreport= async()=>{\n\n      await  dispatch(GetreportByIDs({id:id,token:loginUser?.access}))\n      await  dispatch(GetAllScripts({token:loginUser?.access}))\n      dispatch(setLoading(false));\n    }\n    getreport()\n  },[loginUser])\n\n\n  const store: any = useSelector((i) => i);\n  const reportData = store?.report?.report;\n  const allscripts = store?.script?.Scripts?.results || [];\n  const { loading } = store?.report;\n  \n  // Safeguard against undefined or null values for reportData.scripts\n  const filteredScripts = allscripts.filter((script: any) => {\n    return Array.isArray(reportData?.scripts) && reportData.scripts.includes(script.id);\n  });\n  \n const [selectScript,setSelectScript]=useState({\n  name:'',\n  id:''\n })\n \n  const [show, setShow] = useState(false);\n  const [Deleteshow, setDeleteShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true);\n  };\n\n  const handleUpdate =async ()=>{\n  await  dispatch(Updatereports({\n      values:{\n        \"name\": reportData.name,\n        scripts:[...reportData.scripts,\n          selectScript.id\n        ]\n      },\n      token:loginUser.access,\n      id:id\n    }))\n\n\n    handleToast.SuccessToast(`Update Report successfully`);\n  }\n\n\n  const removeScript = async(val:any)=>{\n  const reduceArray = reportData.scripts.filter((i:any)=>i !== val)\n    await  dispatch(Updatereports({\n      values:{\n        \"name\": reportData.name,\n        scripts:[...reduceArray\n        ]\n      },\n      token:loginUser.access,\n      id:id\n    }))\n    handleToast.SuccessToast(`Remove Script successfully`);\n\n  }\n  return (\n    <>\n      <div className=\"mx-5 py-3\">\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\n          <h1 className=\"h1\">\n            Report Details <span id=\"headerInfo\">({reportData.name})</span>\n          </h1>\n          <div className=\"btn-toolbar mb-2 mb-md-0\">\n            <button\n              onClick={handleShow}\n              type=\"button\"\n              className=\"btn icon-button my-1 mx-2\"\n            >\n              <Icon icon=\"CalendarToday\" size=\"20px\" />\n              <span>Schedule Email</span>\n            </button>\n            <button type=\"button\" className=\"btn icon-button my-1 mx-2\">\n              <Icon icon=\"RemoveRedEye\" size=\"20px\" />\n              <span>View Latest</span>\n            </button>\n            <button type=\"button\" className=\"btn icon-button my-1 mx-2\" onClick={()=>setDeleteShow(true)}>\n              <Icon icon=\"Delete\" size=\"20px\" />\n              <span>Delete</span>\n            </button>\n            <button type=\"button\" className=\"btn icon-button my-1 mx-2\">\n              <Icon icon=\"SystemUpdateAlt\" size=\"20px\" />\n\n              <span>Update</span>\n            </button>\n            <button type=\"submit\" className=\"btn icon-button my-1 mx-2\">\n              <Icon icon=\"Info\" size=\"20px\" />\n\n              <span>info</span>\n            </button>\n          </div>\n        </div>\n\n        <form\n          className=\"w-75\"\n          style={{ maxWidth: \"600px\" }}\n          method=\"post\"\n          encType=\"multipart/form-data\"\n        >\n          <div className=\"mb-3\">\n            <label htmlFor=\"category\" className=\"form-label\">\n              Add report\n            </label>\n            <div className=\"row mx-0 p-0\">\n              <div className=\"col-10 m-0 p-0 pe-1\">\n                <div className=\"dropdown\">\n                  <input type=\"text\" placeholder=\"All\" value={selectScript.name}/>\n                  <div className=\"dropdown-content\" style={{height:'200px',overflow:'auto'}}>\n                  {allscripts.map((script:any,index:any)=>(  <span key={index} onClick={()=>setSelectScript({\n                    name:script.name,\n                    id:script.id\n                  })} className=\"hover-span\">{script.name}</span>))}\n         \n                  </div>\n                </div>\n              </div>\n              <button\n                className=\"btn btn-dark col col-2 p-0 fw-bold justify-content-center\"\n                type=\"button\"\n                disabled={selectScript.name  == ''}\n                onClick={handleUpdate}\n              >\n                Add\n              </button>\n            </div>\n          </div>\n        </form>\n        <div>\n          {132 > -1 ? (\n            <form method=\"post\" id=\"customReportForm\">\n              <div className=\"row mb-2 p-2 fw-bold w-100\">\n                <div className=\"col-5\">\n                  <h5>\n                    <input\n                      type=\"checkbox\"\n                      id=\"selectAllCheckbox\"\n                       \n                    />{\" \"}\n                    Name\n                  </h5>\n                </div>\n            \n                <div className=\"col-2 mx-auto text-center\">Description</div>\n                <div className=\"col-2 mx-auto text-center\">Category</div>\n                <div className=\"col-2 mx-auto text-center\">Created</div>\n                <div className=\"col-1 mx-auto text-center\">Remove</div>\n              </div>\n              <div id=\"reportsCheckboxes\">\n                {filteredScripts ? ( filteredScripts.map((report: any) => (\n              \n                    <div className=\"row mb-2 p-3 table-card rounded-3 w-100 bg-light-green\">\n                      <div className=\"col-5\">\n                        <Link\n                    to={`/account/ScriptDetails/${report.id}`}\n                    className=\"text-decoration-none text-black\"\n                    key={report.id}\n                  >\n                        <span className=\"fw-bold fs-6\">\n                          <input\n                            className=\"chbx\"\n                            type=\"checkbox\"\n                            name=\"reports\"\n                            value={report.id}\n                 \n                          />\n                          {report.name}\n                        </span>\n\n                      </Link>\n                      </div> \n                       <div className=\"col-2 mx-auto text-center wrap-word\">\n                        {report.Description}\n                      </div>\n                      <div className=\"col-2 mx-auto text-center wrap-word\">\n                        {report?.category?.name}\n                      </div>\n                    \n                      <div className=\"col-2 mx-auto text-center\">\n                      <DateFormatter isoString={report.created}/>\n                      </div>\n                      <div className=\"col-1 mx-auto text-center\">\n                        <div\n                        onClick={()=>removeScript(report.id)}\n                          className=\"bg-danger p-1 ms-auto\"\n                          style={{\n                            width: \"27px\",\n                            borderRadius: \"50%\",\n                            color: \"white\",\n                          }}\n                        >\n                          -\n                        </div>\n                      </div>\n                    </div>\n                \n                ))):\n                \n                <Loader/>\n                }\n              </div>\n            </form>\n          ) : (\n            <span className=\"text-large\">\n              Upload reports to generate reports with them\n            </span>\n          )}\n        </div>\n      </div>\n      <ScheduleEmailModal show={show} handleClose={handleClose} />\n      <DeleteModal show={Deleteshow} handleClose={()=>setDeleteShow(false)} data={reportData}  token={loginUser?.access}/>\n    </>\n  );\n};\n\nexport default ReportViwe;\n"],"names":["_ref","isoString","formattedDateTime","Date","toLocaleString","_jsx","_Fragment","children","initialValues","email","report","day","_store$report","_store$report$reports","show","handleClose","dispatch","useDispatch","loginUser","setLoginUser","useState","store","useSelector","i","allreport","reports","results","handleToast","useToast","useEffect","storedLoginUser","localStorage","getItem","JSON","parse","access","async","GetAllreports","token","error","console","getDAta","validationSchema","Yup","required","dayChoices","value","label","Modal","size","centered","onHide","Body","className","style","borderRadius","overflow","Formik","onSubmit","Createschedules","values","SuccessToast","Form","_jsxs","htmlFor","Field","id","name","type","ErrorMessage","component","as","disabled","map","item","key","height","data","useNavigate","onClick","handleDelete","DeleteReportsByIDs","ReportViwe","_store$script","_store$script$Scripts","useParams","setLoading","GetreportByIDs","GetAllScripts","getreport","reportData","allscripts","script","Scripts","loading","filteredScripts","filter","Array","isArray","scripts","includes","selectScript","setSelectScript","setShow","Deleteshow","setDeleteShow","handleShow","Icon","icon","maxWidth","method","encType","placeholder","index","Updatereports","_report$category","Link","to","Description","category","DateFormatter","created","reduceArray","val","removeScript","width","color","Loader","ScheduleEmailModal","DeleteModal"],"sourceRoot":""}