{"version":3,"file":"static/js/682.9121854f.chunk.js","mappings":"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","sources":["Comopnent/ui/Modals/MergeReports/MergeReports.tsx","pages/Reports/Reports.tsx"],"sourcesContent":["import { FC, useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { useNavigate } from 'react-router-dom';\nimport { ActiveRoute } from '../../../../Menu';\nimport { Categoryarray } from '../../../../DummyData/TableData';\n\ninterface MergeReportsProps {\n  show: boolean;\n  handleClose: () => void;\n}\n\nconst MergeReports: FC<MergeReportsProps> = ({show, handleClose }) => {\n  const navigate = useNavigate()\n\n  const [selectVlaue,setSelectValue]=useState('')\n  return (\n    <>\n      <Modal  size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered show={show} onHide={handleClose}>\n       \n        <Modal.Body className='bg-light-green' style={{\n          borderRadius:'25px',\n          overflow:'hidden'\n        }}> \n        <h5>Merge Reports</h5>\n\n        <form  method=\"post\" encType=\"multipart/form-data\">\n          <div className=\"mb-3\">\n            <div className=\"row mx-0 px-3\">\n              <div className=\"col-12 m-0  \">\n            <label htmlFor=\"name\" className=\"form-label\"> Name</label>\n                <input\n                  id=\"name\"\n                  name=\"name\"\n                  className=\"form-control m-0\"\n                  required\n                >\n                   \n                </input>\n              </div>\n        \n              <div className=\"col-12  \">\n            <label htmlFor=\"category\" className=\"form-label\">Report 1</label>\n\n            <div className=\"dropdown\">\n                <input type=\"text\" placeholder=\"All\" />\n                <div className=\"dropdown-content\">\n                  <span className=\"hover-span\">Chart</span>\n                  <span className=\"hover-span\">Table</span>\n                  <span className=\"hover-span\">Chart and Table</span>\n                </div>\n              </div>\n                </div>\n                <div className=\"col-12  \">\n            <label htmlFor=\"category\" className=\"form-label\">Report 2</label>\n\n            <div className=\"dropdown\">\n                <input type=\"text\" placeholder=\"All\" />\n                <div className=\"dropdown-content\">\n                  <span className=\"hover-span\">Chart</span>\n                  <span className=\"hover-span\">Table</span>\n                  <span className=\"hover-span\">Chart and Table</span>\n                </div>\n              </div>\n                </div>\n              \n            <div className=\"col-12 row  justify-content-evenly m-0  \">\n            <label style={{  height: '33px'\n}} htmlFor=\"category\" className=\"invisible\">Last Updated</label>\n \n \n              <button\n              onClick={handleClose}\n                className=\"btn btn-dark col-5  px-3   fw-bold  \"\n                type=\"button\"\n           \n              >\n               Create\n              </button>\n              </div>  \n              \n         \n            </div>\n          </div>\n \n        </form>\n\n        </Modal.Body>\n        {/* <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer> */}\n      </Modal>\n    </>\n  );\n}\n\nexport default MergeReports;\n"," \nimport React, { useState } from 'react';\nimport '../../assest/css/AllScript.css'\nimport Icon from '../../Comopnent/ui/icon/Icon';\nimport { Link } from 'react-router-dom';\nimport { ActiveRoute } from '../../Menu';\nimport MergeReports from '../../Comopnent/ui/Modals/MergeReports/MergeReports';\n\nconst  Report = () => {\n    const [category, setCategory] = useState(\"-1\");\n    const [subCategory, setSubCategory] = useState(\"-1\");\n    const [subSubCategory, setSubSubCategory] = useState(\"-1\");\n    const [selectedScripts, setSelectedScripts] = useState([]);\n \n    const data = [\n        {\ntitle:'Merged example 1 and example 2',\n            category1: \"Tape\",\n          category2: \"Relative Strength\",\n          category3: \"RS\",\n          startDate: \"08/18/24\",\n          endDate: \"08/20/24\",\n          startTime: \"18:52\",\n          endTime: \"10:03\"\n        },\n        {\ntitle:'Merged example 1 and example 2',\n            category1: \"Bonds\",\n          category2: \"CAD Bonds\",\n          category3: \"Regression-CAD\",\n          startDate: \"11/18/23\",\n          endDate: \"08/20/24\",\n          startTime: \"17:39\",\n          endTime: \"10:03\"\n        },\n        {\ntitle:'Merged example 1 and example 2',\n            category1: \"Tape\",\n          category2: \"Returns\",\n          category3: \"Returns-Current\",\n          startDate: \"04/16/24\",\n          endDate: \"08/20/24\",\n          startTime: \"18:47\",\n          endTime: \"10:03\"\n        },\n        {\ntitle:'Merged example 1 and example 2',\n            category1: \"Monetary\",\n          category2: \"Inflation\",\n          category3: \"Inflation-Models\",\n          startDate: \"11/16/23\",\n          endDate: \"08/20/24\",\n          startTime: \"22:56\",\n          endTime: \"10:03\"\n        },\n        {\ntitle:'Merged example 1 and example 2',\n            category1: \"Tape\",\n          category2: \"Breadth\",\n          category3: \"Participation/Disperson\",\n          startDate: \"05/23/24\",\n          endDate: \"08/20/24\",\n          startTime: \"20:34\",\n          endTime: \"10:03\"\n        },\n        {\ntitle:'Merged example 1 and example 2',\n            category1: \"Bonds\",\n          category2: \"USD Bonds\",\n          category3: \"Summary-USD\",\n          startDate: \"01/19/24\",\n          endDate: \"08/20/24\",\n          startTime: \"12:47\",\n          endTime: \"10:04\"\n        },\n        {\ntitle:'Merged example 1 and example 2',\n            category1: \"Econ\",\n          category2: \"Labour\",\n          category3: \"Labour-Models\",\n          startDate: \"08/08/24\",\n          endDate: \"08/20/24\",\n          startTime: \"19:44\",\n          endTime: \"10:03\"\n        }\n      ];\n  \n\n    const handleFilter = () => {\n        let url = '/reports/custom-report/?';\n        if (category !== \"-1\") url += `category=${category}`;\n        if (subCategory !== \"-1\") url += `&subcategory1=${subCategory}`;\n        if (subSubCategory !== \"-1\") url += `&subcategory2=${subSubCategory}`;\n        window.location.replace(url);\n        setSelectedScripts([])\n    };\n\n    const handleResetFilters = () => {\n        window.location.replace('/reports/custom-report/');\n    };\n\n \n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => {\n      setShow(true);\n    };\n   \n\n    return (\n        <div  className='mx-4'>\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\n                <h1 className=\"h1 fw-bold\">Reports </h1>\n                <div className=\"btn-toolbar mb-2 mb-md-0\"  >\n                <button onClick={handleShow} type=\"button\" className=\"btn icon-button my-1 mx-2\" >\n                       <Icon icon='AddChart' size='20px'/>\n                        <span>Merge</span>\n                    </button>\n                     \n                </div>\n            </div>\n            <div>\n                {132 > -1 ? (\n                    <form method=\"post\" id=\"customReportForm\">\n                        <div className=\"row mb-2 p-2 fw-bold w-100\" >\n                            <div className=\"col-8\">\n                                <h5>\n                                     Report Name\n                                </h5>\n                            </div>\n                           \n                            <div className=\"col-2 mx-auto text-center\">Created</div>\n                            <div className=\"col-2 mx-auto text-center\">Last updated</div>\n                        </div>\n                        <div id=\"scriptsCheckboxes\">\n                            {data.map((script:any) => (\n                                <Link to={`/account/${ActiveRoute.ReportDetails.path}`} className=\"text-decoration-none text-black\" key={script.id}>\n                                    <div className=\"row mb-2 p-3 table-card rounded-3 w-100 bg-light-green\">\n                                        <div className=\"col-8\">\n                                            <span className=\"fw-bold fs-6\">\n                                           \n                                                {script.title}\n                                          \n                                            </span>\n                                        </div>\n                                         \n                                        <div className=\"col-2 mx-auto text-center\">\n                                            {script.startDate}\n                                        </div>\n                                        <div className=\"col-2 mx-auto text-center\">\n                                            {script.endDate}\n                                        </div>\n                                    </div>\n                                </Link>\n                            ))}\n                        </div>\n                    </form>\n                ) : (\n                    <span className=\"text-large\">\n                        Upload scripts to generate reports with them\n                    </span>\n                )}\n            </div>\n\n         \n            <MergeReports show={show} handleClose={handleClose}/>\n        </div>\n    );\n};\n\nexport default Report;\n"],"names":["_ref","show","handleClose","useNavigate","selectVlaue","setSelectValue","useState","_jsx","_Fragment","children","Modal","size","centered","onHide","_jsxs","Body","className","style","borderRadius","overflow","method","encType","htmlFor","id","name","required","type","placeholder","height","onClick","Report","category","setCategory","subCategory","setSubCategory","subSubCategory","setSubSubCategory","selectedScripts","setSelectedScripts","setShow","handleShow","Icon","icon","title","category1","category2","category3","startDate","endDate","startTime","endTime","map","script","Link","to","ActiveRoute","ReportDetails","path","MergeReports"],"sourceRoot":""}