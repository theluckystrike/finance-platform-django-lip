{"version":3,"file":"static/js/310.ca13562c.chunk.js","mappings":"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","sources":["Comopnent/ui/Modals/SaveModal/SaveModal.tsx","customHook/useTImeformnt.jsx","pages/tape-summary/tape-summary.tsx"],"sourcesContent":["import { FC } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\ninterface SaveModalProps {\r\n \r\n  show: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst SaveModal: FC<SaveModalProps> = ({show, handleClose }) => {\r\n  return (\r\n    <>\r\n      <Modal  size=\"sm\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered show={show} onHide={handleClose}>\r\n    \r\n        <Modal.Body className='bg-light-green' style={{\r\n          borderRadius:'25px',\r\n          overflow:'hidden'\r\n        }}> \r\n        <h5>Create a new custom report</h5>\r\n        <form  method=\"post\" encType=\"multipart/form-data\">\r\n          <div className=\"mb-3\">\r\n            <div className=\"row mx-0 px-3\">\r\n              <div className=\"col-12 m-0  \">\r\n            <label htmlFor=\"category\" className=\"form-label\">Name</label>\r\n                <input\r\n                  id=\"category\"\r\n                  name=\"category\"\r\n                  className=\"form-control m-0\"\r\n                  \r\n                  required\r\n                >\r\n                   \r\n                </input>\r\n              </div>\r\n       \r\n              \r\n            <div className=\"col-12 row m-0  \">\r\n            <label style={{  height: '33px'\r\n}} htmlFor=\"category\" className=\"invisible\">Last Updated</label>\r\n \r\n              <button\r\n              onClick={handleClose}\r\n                className=\"btn btn-dark  px-3   fw-bold  \"\r\n                type=\"button\"\r\n           \r\n              >\r\n             Create\r\n              </button>\r\n              </div>  \r\n             \r\n         \r\n            </div>\r\n          </div>\r\n \r\n        </form>\r\n\r\n        </Modal.Body>\r\n        {/* <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SaveModal;\r\n","import React from 'react';\r\n\r\nconst DateFormatter = ({ isoString }) => {\r\n  // Format the date and time based on the locale\r\n  const formattedDateTime = new Date(isoString).toLocaleString();\r\n\r\n  return (\r\n    <>\r\n      {formattedDateTime}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DateFormatter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../../assest/css/AllScript.css\";\r\nimport FilterModal from \"../../Comopnent/ui/Modals/FilterModal/FilterModal\";\r\nimport { ActiveRoute } from \"../../Menu\";\r\nimport SaveModal from \"../../Comopnent/ui/Modals/SaveModal/SaveModal\";\r\nimport { ScriptData, TapeSummaryData } from \"../../DummyData/TableData\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GetAllScripts } from \"../../Redux/Script/ScriptSlice\";\r\nimport DateFormatter from \"../../customHook/useTImeformnt\";\r\n\r\nconst TapeSummary: React.FC = () => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const dispatch =useDispatch()\r\n \r\n  // const { data, error, isLoading } = useGetAllProjectQuery({ token:'fds', page_no:1, page_size:1000 });\r\n\r\nconst store:any = useSelector((i)=>i)\r\n \r\nconst [selectedScripts, setSelectedScripts] = useState<string[]>([]);\r\n const {loading}=store?.script\r\n const allscripts = store?.script?.Scripts?.results\r\n \r\n \r\n \r\n const [loginUser, setLoginUser] = useState<any>(null);\r\n \r\n   // Effect to retrieve loginUser from localStorage on component mount\r\n   useEffect(() => {\r\n     const storedLoginUser = localStorage.getItem(\"login\");\r\n     if (storedLoginUser) {\r\n       setLoginUser(JSON.parse(storedLoginUser));\r\n     }\r\n   }, []);\r\n  useEffect(()=>{\r\n \r\n  if(loginUser){\r\n\r\n    const  getDAta =async ()=>{\r\n      try {\r\n        await  dispatch(GetAllScripts({token:loginUser?.access}))\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    getDAta()\r\n  }\r\n \r\n       },[loginUser])\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [saveShow, setSaveShow] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const toggleSelectAll = (event: React.ChangeEvent<any>) => {\r\n    const checkboxes = document.querySelectorAll(\r\n      '#scriptsCheckboxes input[type=\"checkbox\"]'\r\n    );\r\n    checkboxes.forEach(\r\n      (checkbox: any) => (checkbox.checked = event.target.checked)\r\n    );\r\n    handleCheckboxChange();\r\n  };\r\n\r\n  const handleCheckboxChange = (event?: React.ChangeEvent<any>) => {\r\n    if (event) event.stopPropagation();\r\n\r\n    const selected = Array.from(\r\n      document.querySelectorAll(\r\n        '#scriptsCheckboxes input[type=\"checkbox\"]:checked'\r\n      )\r\n    ).map((checkbox: any) => checkbox.value);\r\n\r\n    setSelectedScripts(selected);\r\n  };\r\n  \r\n\r\n  const handleGetResults = () => {\r\n    if (selectedScripts.length > 0) {\r\n      const query = new URLSearchParams({ scriptIds: selectedScripts.join(',') }).toString();\r\n      navigate(`/account/${ActiveRoute.TapeSummaryResult.path}?${query}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mx-4\">\r\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\r\n          <h1 className=\"h1\">\r\n            Tape Summary <span id=\"headerInfo\">(132)</span>\r\n          </h1>\r\n          <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n            <button\r\n              className=\"btn bg-green opacity-100 text-light col py-2 px-3 justify-content-center\"\r\n              type=\"button\"\r\n              onClick={handleGetResults} \r\n              disabled={selectedScripts.length === 0}\r\n            >\r\n              Get Result\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {132 > -1 ? (\r\n            <form method=\"post\" id=\"customReportForm\">\r\n              <div className=\"row mb-2 p-2 fw-bold w-100\">\r\n                <div className=\"col-6\">\r\n                  <h5>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"selectAllCheckbox\"\r\n                      onChange={toggleSelectAll}\r\n                    />{\" \"}\r\n                    Name\r\n                  </h5>\r\n                </div>\r\n                <div className=\"col-2 mx-auto text-center\">Category</div>\r\n                <div className=\"col-2 mx-auto text-center\">Created</div>\r\n                <div className=\"col-2 mx-auto text-center\">Last updated</div>\r\n              </div>\r\n              <div id=\"scriptsCheckboxes\">\r\n                {allscripts && allscripts.map((script: any) => (\r\n                  <div\r\n                    className=\"row mb-2 p-3 table-card rounded-3 w-100 bg-light-green\"\r\n                    key={script.id}\r\n                  >\r\n                    <div className=\"col-6\">\r\n                      <span className=\"fw-bold fs-6\">\r\n                        <input\r\n                          className=\"chbx\"\r\n                          type=\"checkbox\"\r\n                          name=\"scripts\"\r\n                          value={script?.id}\r\n                          onChange={handleCheckboxChange}\r\n                        />\r\n                        {script?.name}\r\n                      </span>\r\n                    </div>\r\n                  \r\n                    <div className=\"col-2 mx-auto text-center wrap-word\">\r\n                      {script?.category?.name}\r\n                    </div>\r\n                    <div className=\"col-2 mx-auto text-center wrap-word\">\r\n                    <DateFormatter isoString={script.created}/>\r\n    \r\n                    </div>\r\n                 \r\n                    <div className=\"col-2 mx-auto text-center\">\r\n                    <DateFormatter isoString={script.last_updated}/>\r\n                     \r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </form>\r\n          ) : (\r\n            <span className=\"text-large\">\r\n              Upload scripts to generate reports with them\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n \r\n      <SaveModal show={saveShow} handleClose={() => setSaveShow(false)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TapeSummary;\r\n"],"names":["_ref","show","handleClose","_jsx","_Fragment","children","Modal","size","centered","onHide","_jsxs","Body","className","style","borderRadius","overflow","method","encType","htmlFor","id","name","required","height","onClick","type","isoString","formattedDateTime","Date","toLocaleString","TapeSummary","_store$script","_store$script$Scripts","dispatch","useDispatch","store","useSelector","i","selectedScripts","setSelectedScripts","useState","loading","script","allscripts","Scripts","results","loginUser","setLoginUser","useEffect","storedLoginUser","localStorage","getItem","JSON","parse","async","GetAllScripts","token","access","error","console","log","getDAta","setShow","saveShow","setSaveShow","navigate","useNavigate","handleCheckboxChange","event","stopPropagation","selected","Array","from","document","querySelectorAll","map","checkbox","value","handleGetResults","length","query","URLSearchParams","scriptIds","join","toString","ActiveRoute","TapeSummaryResult","path","disabled","onChange","forEach","checked","target","_script$category","category","DateFormatter","created","last_updated","SaveModal"],"sourceRoot":""}