{"version":3,"file":"static/js/712.5050e671.chunk.js","mappings":"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","sources":["../../../../../../../solarch/plotly/webgl/plotly.js/node_modules/regl-splom/index.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/src/factory.js","../node_modules/src/react-plotly.js"],"sourcesContent":["'use strict'\n\n\nconst createScatter = require('regl-scatter2d')\nconst pick = require('pick-by-alias')\nconst getBounds = require('array-bounds')\nconst raf = require('raf')\nconst arrRange = require('array-range')\nconst rect = require('parse-rect')\nconst flatten = require('flatten-vertex-data')\n\n\nmodule.exports = SPLOM\n\n\n// @constructor\nfunction SPLOM (regl, options) {\n\tif (!(this instanceof SPLOM)) return new SPLOM(regl, options)\n\n\t// render passes\n\tthis.traces = []\n\n\t// passes for scatter, combined across traces\n\tthis.passes = {}\n\n\tthis.regl = regl\n\n\t// main scatter drawing instance\n\tthis.scatter = createScatter(regl)\n\n\tthis.canvas = this.scatter.canvas\n}\n\n\n// update & draw passes once per frame\nSPLOM.prototype.render = function (...args) {\n\tif (args.length) {\n\t\tthis.update(...args)\n\t}\n\n\tif (this.regl.attributes.preserveDrawingBuffer) return this.draw()\n\n\t// make sure draw is not called more often than once a frame\n\tif (this.dirty) {\n\t\tif (this.planned == null) {\n\t\t\tthis.planned = raf(() => {\n\t\t\t\tthis.draw()\n\t\t\t\tthis.dirty = true\n\t\t\t\tthis.planned = null\n\t\t\t})\n\t\t}\n\t}\n\telse {\n\t\tthis.draw()\n\t\tthis.dirty = true\n\t\traf(() => {\n\t\t\tthis.dirty = false\n\t\t})\n\t}\n\n\treturn this\n}\n\n\n// update passes\nSPLOM.prototype.update = function (...args) {\n\tif (!args.length) return\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tthis.updateItem(i, args[i])\n\t}\n\n\t// remove nulled passes\n\tthis.traces = this.traces.filter(Boolean)\n\n\t// FIXME: update passes independently\n\tlet passes = []\n\tlet offset = 0\n\tfor (let i = 0; i < this.traces.length; i++) {\n\t\tlet trace = this.traces[i]\n\t\tlet tracePasses = this.traces[i].passes\n\t\tfor (let j = 0; j < tracePasses.length; j++) {\n\t\t\tpasses.push(this.passes[tracePasses[j]])\n\t\t}\n\t\t// save offset of passes\n\t\ttrace.passOffset = offset\n\t\toffset += trace.passes.length\n\t}\n\n\tthis.scatter.update(...passes)\n\n\treturn this\n}\n\n\n// update trace by index, not supposed to be called directly\nSPLOM.prototype.updateItem = function (i, options) {\n\tlet { regl } = this\n\n\t// remove pass if null\n\tif (options === null) {\n\t\tthis.traces[i] = null\n\t\treturn this\n\t}\n\n\tif (!options) return this\n\n\tlet o = pick(options, {\n\t\tdata: 'data items columns rows values dimensions samples x',\n\t\tsnap: 'snap cluster',\n\t\tsize: 'sizes size radius',\n\t\tcolor: 'colors color fill fill-color fillColor',\n\t\topacity: 'opacity alpha transparency opaque',\n\t\tborderSize: 'borderSizes borderSize border-size bordersize borderWidth borderWidths border-width borderwidth stroke-width strokeWidth strokewidth outline',\n\t\tborderColor: 'borderColors borderColor bordercolor stroke stroke-color strokeColor',\n\t\tmarker: 'markers marker shape',\n\t\trange: 'range ranges databox dataBox',\n\t\tviewport: 'viewport viewBox viewbox',\n\t\tdomain: 'domain domains area areas',\n\t\tpadding: 'pad padding paddings pads margin margins',\n\t\ttranspose: 'transpose transposed',\n\t\tdiagonal: 'diagonal diag showDiagonal',\n\t\tupper: 'upper up top upperhalf upperHalf showupperhalf showUpper showUpperHalf',\n\t\tlower: 'lower low bottom lowerhalf lowerHalf showlowerhalf showLowerHalf showLower'\n\t})\n\n\t// we provide regl buffer per-trace, since trace data can be changed\n\tlet trace = (this.traces[i] || (this.traces[i] = {\n\t\tid: i,\n\t\tbuffer: regl.buffer({\n\t\t\tusage: 'dynamic',\n\t\t\ttype: 'float',\n\t\t\tdata: new Uint8Array()\n\t\t}),\n\t\tcolor: 'black',\n\t\tmarker: null,\n\t\tsize: 12,\n\t\tborderColor: 'transparent',\n\t\tborderSize: 1,\n\t\tviewport:  rect([regl._gl.drawingBufferWidth, regl._gl.drawingBufferHeight]),\n\t\tpadding: [0, 0, 0, 0],\n\t\topacity: 1,\n\t\tdiagonal: true,\n\t\tupper: true,\n\t\tlower: true\n\t}))\n\n\n\t// save styles\n\tif (o.color != null) {\n\t\ttrace.color = o.color\n\t}\n\tif (o.size != null) {\n\t\ttrace.size = o.size\n\t}\n\tif (o.marker != null) {\n\t\ttrace.marker = o.marker\n\t}\n\tif (o.borderColor != null) {\n\t\ttrace.borderColor = o.borderColor\n\t}\n\tif (o.borderSize != null) {\n\t\ttrace.borderSize = o.borderSize\n\t}\n\tif (o.opacity != null) {\n\t\ttrace.opacity = o.opacity\n\t}\n\tif (o.viewport) {\n\t\ttrace.viewport = rect(o.viewport)\n\t}\n\tif (o.diagonal != null) trace.diagonal = o.diagonal\n\tif (o.upper != null) trace.upper = o.upper\n\tif (o.lower != null) trace.lower = o.lower\n\n\t// put flattened data into buffer\n\tif (o.data) {\n\t\ttrace.buffer(flatten(o.data))\n\t\ttrace.columns = o.data.length\n\t\ttrace.count = o.data[0].length\n\n\t\t// detect bounds per-column\n\t\ttrace.bounds = []\n\n\t\tfor (let i = 0; i < trace.columns; i++) {\n\t\t\ttrace.bounds[i] = getBounds(o.data[i], 1)\n\t\t}\n\t}\n\n\t// add proper range updating markers\n\tlet multirange\n\tif (o.range) {\n\t\ttrace.range = o.range\n\t\tmultirange = trace.range && typeof trace.range[0] !== 'number'\n\t}\n\n\tif (o.domain) {\n\t\ttrace.domain = o.domain\n\t}\n\tlet multipadding = false\n\tif (o.padding != null) {\n\t\t// multiple paddings\n\t\tif (Array.isArray(o.padding) && o.padding.length === trace.columns && typeof o.padding[o.padding.length - 1] === 'number') {\n\t\t\ttrace.padding = o.padding.map(getPad)\n\t\t\tmultipadding = true\n\t\t}\n\t\t// single padding\n\t\telse {\n\t\t\ttrace.padding = getPad(o.padding)\n\t\t}\n\t}\n\n\t// create passes\n\tlet m = trace.columns\n\tlet n = trace.count\n\n\tlet w = trace.viewport.width\n\tlet h = trace.viewport.height\n\tlet left = trace.viewport.x\n\tlet top = trace.viewport.y\n\tlet iw = w / m\n\tlet ih = h / m\n\n\ttrace.passes = []\n\n\tfor (let i = 0; i < m; i++) {\n\t\tfor (let j = 0; j < m; j++) {\n\t\t\tif (!trace.diagonal && j === i) continue\n\t\t\tif (!trace.upper && i > j) continue\n\t\t\tif (!trace.lower && i < j) continue\n\n\t\t\tlet key = passId(trace.id, i, j)\n\n\t\t\tlet pass = this.passes[key] || (this.passes[key] = {})\n\n\t\t\tif (o.data) {\n\t\t\t\tif (o.transpose) {\n\t\t\t\t\tpass.positions = {\n\t\t\t\t\t\tx: {buffer: trace.buffer, offset: j, count: n, stride: m},\n\t\t\t\t\t\ty: {buffer: trace.buffer, offset: i, count: n, stride: m}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpass.positions = {\n\t\t\t\t\t\tx: {buffer: trace.buffer, offset: j * n, count: n},\n\t\t\t\t\t\ty: {buffer: trace.buffer, offset: i * n, count: n}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpass.bounds = getBox(trace.bounds, i, j)\n\t\t\t}\n\n\t\t\tif (o.domain || o.viewport || o.data) {\n\t\t\t\tlet pad = multipadding ? getBox(trace.padding, i, j) : trace.padding\n\t\t\t\tif (trace.domain) {\n\t\t\t\t\tlet [lox, loy, hix, hiy] = getBox(trace.domain, i, j)\n\n\t\t\t\t\tpass.viewport = [\n\t\t\t\t\t\tleft + lox * w + pad[0],\n\t\t\t\t\t\ttop + loy * h + pad[1],\n\t\t\t\t\t\tleft + hix * w - pad[2],\n\t\t\t\t\t\ttop + hiy * h - pad[3]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t// consider auto-domain equipartial\n\t\t\t\telse {\n\t\t\t\t\tpass.viewport = [\n\t\t\t\t\t\tleft + j * iw + iw * pad[0],\n\t\t\t\t\t\ttop + i * ih + ih * pad[1],\n\t\t\t\t\t\tleft + (j + 1) * iw - iw * pad[2],\n\t\t\t\t\t\ttop + (i + 1) * ih - ih * pad[3]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (o.color) pass.color = trace.color\n\t\t\tif (o.size) pass.size = trace.size\n\t\t\tif (o.marker) pass.marker = trace.marker\n\t\t\tif (o.borderSize) pass.borderSize = trace.borderSize\n\t\t\tif (o.borderColor) pass.borderColor = trace.borderColor\n\t\t\tif (o.opacity) pass.opacity = trace.opacity\n\n\t\t\tif (o.range) {\n\t\t\t\tpass.range = multirange ? getBox(trace.range, i, j) : trace.range || pass.bounds\n\t\t\t}\n\n\t\t\ttrace.passes.push(key)\n\t\t}\n\t}\n\n\treturn this\n}\n\n\n// draw all or passed passes\nSPLOM.prototype.draw = function (...args) {\n\tif (!args.length) {\n\t\tthis.scatter.draw()\n\t}\n\telse {\n\t\tlet idx = []\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t// draw(0, 2, 5) - draw traces\n\t\t\tif (typeof args[i] === 'number' ) {\n\t\t\t\tlet { passes, passOffset } = this.traces[args[i]]\n\t\t\t\tidx.push(...arrRange(passOffset, passOffset + passes.length))\n\t\t\t}\n\t\t\t// draw([0, 1, 2 ...], [3, 4, 5]) - draw points\n\t\t\telse if (args[i].length) {\n\t\t\t\tlet els = args[i]\n\t\t\t\tlet { passes, passOffset } = this.traces[i]\n\t\t\t\tpasses = passes.map((passId, i) => {\n\t\t\t\t\tidx[passOffset + i] = els\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tthis.scatter.draw(...idx)\n\t}\n\n\treturn this\n}\n\n\n// dispose resources\nSPLOM.prototype.destroy = function () {\n\tthis.traces.forEach(trace => {\n\t\tif (trace.buffer && trace.buffer.destroy) trace.buffer.destroy()\n\t})\n\tthis.traces = null\n\tthis.passes = null\n\n\tthis.scatter.destroy()\n\n\treturn this\n}\n\n\n// return pass corresponding to trace i- j- square\nfunction passId (trace, i, j) {\n\tlet id = (trace.id != null ? trace.id : trace)\n\tlet n = i\n\tlet m = j\n\tlet key = id << 16 | (n & 0xff) << 8 | m & 0xff\n\n\treturn key\n}\n\n\n// return bounding box corresponding to a pass\nfunction getBox (items, i, j) {\n\tlet ilox, iloy, ihix, ihiy, jlox, jloy, jhix, jhiy\n\tlet iitem = items[i], jitem = items[j]\n\n\tif (iitem.length > 2) {\n\t\tilox = iitem[0]\n\t\tihix = iitem[2]\n\t\tiloy = iitem[1]\n\t\tihiy = iitem[3]\n\t}\n\telse if (iitem.length) {\n\t\tilox = iloy = iitem[0]\n\t\tihix = ihiy = iitem[1]\n\t}\n\telse {\n\t\tilox = iitem.x\n\t\tiloy = iitem.y\n\t\tihix = iitem.x + iitem.width\n\t\tihiy = iitem.y + iitem.height\n\t}\n\n\tif (jitem.length > 2) {\n\t\tjlox = jitem[0]\n\t\tjhix = jitem[2]\n\t\tjloy = jitem[1]\n\t\tjhiy = jitem[3]\n\t}\n\telse if (jitem.length) {\n\t\tjlox = jloy = jitem[0]\n\t\tjhix = jhiy = jitem[1]\n\t}\n\telse {\n\t\tjlox = jitem.x\n\t\tjloy = jitem.y\n\t\tjhix = jitem.x + jitem.width\n\t\tjhiy = jitem.y + jitem.height\n\t}\n\n\treturn [ jlox, iloy, jhix, ihiy ]\n}\n\n\nfunction getPad (arg) {\n\tif (typeof arg === 'number') return [arg, arg, arg, arg]\n\telse if (arg.length === 2) return [arg[0], arg[1], arg[0], arg[1]]\n\telse {\n\t\tlet box = rect(arg)\n\t\treturn [box.x, box.y, box.x + box.width, box.y + box.height]\n\t}\n}\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  'AfterExport',\n  'AfterPlot',\n  'Animated',\n  'AnimatingFrame',\n  'AnimationInterrupted',\n  'AutoSize',\n  'BeforeExport',\n  'BeforeHover',\n  'ButtonClicked',\n  'Click',\n  'ClickAnnotation',\n  'Deselect',\n  'DoubleClick',\n  'Framework',\n  'Hover',\n  'LegendClick',\n  'LegendDoubleClick',\n  'Relayout',\n  'Relayouting',\n  'Restyle',\n  'Redraw',\n  'Selected',\n  'Selecting',\n  'SliderChange',\n  'SliderEnd',\n  'SliderStart',\n  'SunburstClick',\n  'Transitioning',\n  'TransitionInterrupted',\n  'Unhover',\n  'WebGlContextLost',\n];\n\nconst updateEvents = [\n  'plotly_restyle',\n  'plotly_redraw',\n  'plotly_relayout',\n  'plotly_relayouting',\n  'plotly_doubleclick',\n  'plotly_animated',\n  'plotly_sunburstclick',\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== 'undefined';\n\nexport default function plotComponentFactory(Plotly) {\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.figureCallback = this.figureCallback.bind(this);\n      this.updatePlotly = this.updatePlotly.bind(this);\n    }\n\n    updatePlotly(shouldInvokeResizeHandler, figureCallbackFunction, shouldAttachUpdateEvents) {\n      this.p = this.p\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          if (!this.el) {\n            throw new Error('Missing element reference');\n          }\n          // eslint-disable-next-line consistent-return\n          return Plotly.react(this.el, {\n            data: this.props.data,\n            layout: this.props.layout,\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          this.syncWindowResize(shouldInvokeResizeHandler);\n          this.syncEventHandlers();\n          this.figureCallback(figureCallbackFunction);\n          if (shouldAttachUpdateEvents) {\n            this.attachUpdateEvents();\n          }\n        })\n        .catch((err) => {\n          if (this.props.onError) {\n            this.props.onError(err);\n          }\n        });\n    }\n\n    componentDidMount() {\n      this.unmounting = false;\n\n      this.updatePlotly(true, this.props.onInitialized, true);\n    }\n\n    componentDidUpdate(prevProps) {\n      this.unmounting = false;\n\n      // frames *always* changes identity so fall back to check length only :(\n      const numPrevFrames =\n        prevProps.frames && prevProps.frames.length ? prevProps.frames.length : 0;\n      const numNextFrames =\n        this.props.frames && this.props.frames.length ? this.props.frames.length : 0;\n\n      const figureChanged = !(\n        prevProps.layout === this.props.layout &&\n        prevProps.data === this.props.data &&\n        prevProps.config === this.props.config &&\n        numNextFrames === numPrevFrames\n      );\n      const revisionDefined = prevProps.revision !== void 0;\n      const revisionChanged = prevProps.revision !== this.props.revision;\n\n      if (!figureChanged && (!revisionDefined || (revisionDefined && !revisionChanged))) {\n        return;\n      }\n\n      this.updatePlotly(false, this.props.onUpdate, false);\n    }\n\n    componentWillUnmount() {\n      this.unmounting = true;\n\n      this.figureCallback(this.props.onPurge);\n\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.on(updateEvent, this.handleUpdate);\n      });\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.removeListener(updateEvent, this.handleUpdate);\n      });\n    }\n\n    handleUpdate() {\n      this.figureCallback(this.props.onUpdate);\n    }\n\n    figureCallback(callback) {\n      if (typeof callback === 'function') {\n        const {data, layout} = this.el;\n        const frames = this.el._transitionData ? this.el._transitionData._frames : null;\n        const figure = {data, layout, frames};\n        callback(figure, this.el);\n      }\n    }\n\n    syncWindowResize(invoke) {\n      if (!isBrowser) {\n        return;\n      }\n\n      if (this.props.useResizeHandler && !this.resizeHandler) {\n        this.resizeHandler = () => Plotly.Plots.resize(this.el);\n        window.addEventListener('resize', this.resizeHandler);\n        if (invoke) {\n          this.resizeHandler();\n        }\n      } else if (!this.props.useResizeHandler && this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers() {\n      eventNames.forEach((eventName) => {\n        const prop = this.props['on' + eventName];\n        const handler = this.handlers[eventName];\n        const hasHandler = Boolean(handler);\n\n        if (prop && !hasHandler) {\n          this.addEventHandler(eventName, prop);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.removeEventHandler(eventName);\n        } else if (prop && hasHandler && prop !== handler) {\n          // replace the handler\n          this.removeEventHandler(eventName);\n          this.addEventHandler(eventName, prop);\n        }\n      });\n    }\n\n    addEventHandler(eventName, prop) {\n      this.handlers[eventName] = prop;\n      this.el.on(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n    }\n\n    removeEventHandler(eventName) {\n      this.el.removeListener(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n      delete this.handlers[eventName];\n    }\n\n    getPlotlyEventName(eventName) {\n      return 'plotly_' + eventName.toLowerCase();\n    }\n\n    render() {\n      return (\n        <div\n          id={this.props.divId}\n          style={this.props.style}\n          ref={this.getRef}\n          className={this.props.className}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onPurge: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    useResizeHandler: PropTypes.bool,\n    divId: PropTypes.string,\n  };\n\n  eventNames.forEach((eventName) => {\n    PlotlyComponent.propTypes['on' + eventName] = PropTypes.func;\n  });\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {position: 'relative', display: 'inline-block'},\n  };\n\n  return PlotlyComponent;\n}\n","import plotComponentFactory from './factory';\nimport Plotly from 'plotly.js/dist/plotly';\n\nconst PlotComponent = plotComponentFactory(Plotly);\n\nexport default PlotComponent;\n"],"names":["factory","self","__webpack_modules__","__unused_webpack_module","__unused_webpack_exports","__webpack_require__","Lib","rules","selector","fullSelector","replace","addStyleRule","module","exports","Plotly","register","CardBody","React","_ref","ref","className","bsPrefix","as","Component","props","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","prefix","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","children","CardImg","variant","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","Card","bg","text","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","CardFooter","ImgOverlay","PlotlyComponent","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","_assertThisInitialized","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","figureCallback","updatePlotly","_createClass","key","shouldInvokeResizeHandler","figureCallbackFunction","shouldAttachUpdateEvents","_this2","this","then","unmounting","el","Error","react","data","layout","config","frames","err","onError","onInitialized","prevProps","numPrevFrames","length","numNextFrames","figureChanged","revisionDefined","revision","revisionChanged","onUpdate","onPurge","isBrowser","window","removeEventListener","removeUpdateEvents","purge","_this3","removeListener","updateEvents","forEach","updateEvent","on","_this4","callback","_this$el","_transitionData","_frames","invoke","_this5","useResizeHandler","Plots","resize","addEventListener","debug","gd","_this6","eventNames","eventName","prop","handler","hasHandler","Boolean","addEventHandler","removeEventHandler","getPlotlyEventName","toLowerCase","_react","createElement","id","divId","style","propTypes","_propTypes","arrayOf","object","number","func","bool","string","defaultProps","position","display","_interopRequireWildcard","require","_factory","_interopRequireDefault","_plotly"],"sourceRoot":""}