{"version":3,"file":"static/js/618.ff6d9d73.chunk.js","mappings":"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","sources":["Comopnent/ui/Modals/CategoryModal/CategoryModal.tsx","pages/UploadScript/UploadScript.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ActiveRoute } from \"../../../../Menu\";\nimport { Categoryarray } from \"../../../../DummyData/TableData\";\nimport { useCreateMutation } from \"../../../../Redux/CategoryQuery\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { loginUSer } from \"../../../../customHook/getrole\";\n\nimport { useRefreshtokenMutation } from \"../../../../Redux/AuthSlice\";\nimport useToast from \"../../../../customHook/toast\";\nimport { useSelector } from \"react-redux\";\n\ninterface CategoryModalProps {\n  show: boolean;\n  handleClose: () => void;\n  categoryFilter: any[];\n}\n\nconst CategoryModal: FC<CategoryModalProps> = ({\n  show,\n  handleClose,\n  categoryFilter,\n}) => {\n  const [create, { isLoading, isSuccess, isError, error, data }] =\n    useCreateMutation();\n  const [refreshtoken, Res] = useRefreshtokenMutation();\n\n  console.log(categoryFilter);\n\n  const navigate = useNavigate();\n  const [selectValue, setSelectValue] = useState(\"\");\n  const handleToast = useToast();\n\n  // Formik setup\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      parent: \"\",\n      parentName:\"\"\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required(\"Category name is required\"),\n    }),\n    onSubmit: (values) => {\n      // Handle form submission\n      create({ token: loginUSer.access, data: values }); // Call mutation with form values\n      handleClose();\n    },\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      handleToast.SuccessToast(`New Category added successfully`);\n    }\n\n    if (isError) {\n      if ((error as any)?.data) {\n        // console.log('Calling refresh token...');\n        // refreshtoken({\n        //   token: loginUSer.refresh,\n        //   page_no: 1,\n        //   page_size: 1000,\n        // })\n        // console.log('Refresh token data:');\n        handleToast.ErrorToast(\n          \"Token is invalid or expired. Please login again.\"\n        );\n        navigate(\"/login\");\n        localStorage.removeItem(\"login\");\n        const apiError = (error as any).data as { detail?: string };\n        console.log(\"Error:\", apiError.detail || \"An unknown error occurred\");\n      } else {\n        console.log(\"An unknown error occurred.\");\n      }\n    }\n  }, [isSuccess, isError, error, data]);\n  return (\n    <>\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={show}\n        onHide={handleClose}\n      >\n        <Modal.Body\n          className=\"bg-light-green\"\n          style={{\n            borderRadius: \"25px\",\n            overflow: \"hidden\",\n          }}\n        >\n          <form onSubmit={formik.handleSubmit} encType=\"multipart/form-data\">\n            <div className=\"mb-3\">\n              <div className=\"row mx-0 px-3\">\n                <div className=\"col-12 m-0\">\n                  <label htmlFor=\"category\" className=\"form-label\">\n                    Category Name\n                  </label>\n                  <input\n                    id=\"name\"\n                    name=\"name\"\n                    className=\"form-control m-0\"\n                    required\n                    value={formik.values.name}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                  />\n                  {formik.touched.name && formik.errors.name ? (\n                    <div className=\"text-danger\">{formik.errors.name}</div>\n                  ) : null}\n                </div>\n\n                <div className=\"col-12\">\n                  <label htmlFor=\"parent\" className=\"form-label\">\n                    Parent Category\n                  </label>\n\n                  <div className=\"dropdown\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"All\"\n                      value={formik.values.parentName}\n                      readOnly\n                    />\n                    <div\n                      className=\"dropdown-content\"\n                      style={{ height: \"200px\", overflow: \"auto\" }}\n                    >\n                      {categoryFilter.length > 0 &&\n                        categoryFilter.map((item: any, index: any) => (\n                          <span className=\"h6  \" key={item.name}>\n                            <span\n                              className=\"hover-span \"\n                              onClick={() =>\n                               { formik.setFieldValue(\"parent\", item.id)\n                                formik.setFieldValue(\"parentName\", item.name)\n                               }\n                              }\n                            >\n                              {item.name}\n                            </span>\n                            {item.subcategories?.map(\n                              (subitem: any, subindex: any) => (\n                                <span\n                                  className=\"text-muted hover-span\"\n                                  key={subindex}\n                                >\n                                  <span\n                                    className=\"hover-span  text-muted\"\n                                    onClick={() =>\n                                      { formik.setFieldValue(\"parent\", subitem.id)\n                                        formik.setFieldValue(\"parentName\", subitem.name)\n                                       }\n                                    }\n                                  >\n                                    {subitem.name}\n                                  </span>\n                                  {subitem.subcategories?.map(\n                                    (inneritem: any, innerindex: any) => (\n                                      <span className=\"fs-6 \" key={innerindex}>\n                                        <span\n                                          className=\"hover-span  text-mute\"\n                                          onClick={() =>\n                                            { formik.setFieldValue(\"parent\", inneritem.id)\n                                              formik.setFieldValue(\"parentName\", inneritem.name)\n                                             }\n                                          }\n                                        >\n                                          {inneritem.name}\n                                        </span>\n                                      </span>\n                                    )\n                                  )}\n                                </span>\n                              )\n                            )}\n                          </span>\n                        ))}\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12 row justify-content-evenly m-0\">\n                  <label\n                    style={{ height: \"33px\" }}\n                    htmlFor=\"category\"\n                    className=\"invisible\"\n                  >\n                    Last Updated\n                  </label>\n\n                  <button\n                    onClick={() =>\n                      navigate(`/account/${ActiveRoute.CategoryManager.path}`)\n                    }\n                    className=\"btn border border-dark col-5 px-3 fw-bold\"\n                    type=\"button\"\n                  >\n                    Edit All Category\n                  </button>\n                  <button\n                    className=\"btn btn-dark col-5 px-3 fw-bold\"\n                    type=\"submit\"\n                  >\n                    Apply\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default CategoryModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Icon from \"../../Comopnent/ui/icon/Icon\";\nimport CategoryModal from \"../../Comopnent/ui/Modals/CategoryModal/CategoryModal\";\nimport { Categoryarray } from \"../../DummyData/TableData\";\nimport ArrowDown from '../../assest/image/arrow-down.png';\nimport { useGetuserbytokenQuery } from \"../../Redux/AuthSlice\";\n// import { loginUSer } from \"../../customHook/getrole\";\nimport { useGetAllCategoryQuery } from \"../../Redux/CategoryQuery\";\n \n\n// Define validation schema using Yup\nconst validationSchema = Yup.object({\n  category: Yup.string().required('Category is required'),\n  outputType: Yup.string().required('Output type is required'),\n  name: Yup.string().required('Script name is required'),\n  file: Yup.mixed().required('File is required'),\n});\n\nconst UploadScriptForm = () => {\n\n\n\n\n\n\n\n\nconst [loginUser, setLoginUser] = useState<any>(null);\n\n// Effect to retrieve loginUser from localStorage on component mount\nuseEffect(() => {\n  const storedLoginUser = localStorage.getItem(\"login\");\n\n  // Check if storedLoginUser is not null before parsing\n  if (storedLoginUser) {\n    setLoginUser(JSON.parse(storedLoginUser)); // Set the loginUser state if it's available\n  }\n}, []);\nconst { data: AllCategory, isError } = useGetAllCategoryQuery({token:loginUser?.access, page_no:1, page_size:1000 });\n//  \n  const categoryData = AllCategory?.categories || [];\n  const [categoryFilter,setCategoryFilter ]=useState<any>([])\n\n  const { data, error, isLoading } = useGetuserbytokenQuery({ token:loginUser?.access, page_no:1, page_size:1000 });\n  const [show, setShow] = useState(false);\n  const [selectValue, setSelectValue] = useState('');\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const formik = useFormik({\n    initialValues: {\n      category: '',\n      outputType: '',\n      name: '',\n      file: null,\n    },\n    validationSchema,\n    onSubmit: (values) => {\n      console.log(values);\n      // Handle form submission\n      // Example: navigate('account/upload');\n    },\n  });\n\n\n\n\n  useEffect(() => {\n    const categoryMap: any = {};\n  \n    // Initialize categories in the map\n    categoryData.forEach((cat: any) => {\n      categoryMap[cat.id] = { ...cat, subcategories: [] };\n    });\n  \n    // Populate the subcategories\n    categoryData.forEach((cat: any) => {\n      if (cat.parent_name === null) {\n        // Root category, do nothing here\n      } else {\n        // Find the parent category and add the current category as a subcategory\n        const parent:any = Object.values(categoryMap).find(\n          (parentCat: any) => parentCat.name === cat.parent_name\n        );\n        if (parent) {\n          parent.subcategories.push(categoryMap[cat.id]);\n        }\n      }\n    });\n  \n    // Extract root categories\n    const structuredCategories = Object.values(categoryMap).filter(\n      (cat: any) => cat.parent_name === null\n    );\n  \n    setCategoryFilter(structuredCategories);\n  \n  }, [categoryData]);\n  \n  \n  return (\n    <>\n      <div className=\"UploadScript_main_wrap mt-3\">\n        <h1 className=\"h1 fw-bold\">Upload a Script</h1>\n\n        <div className=\"d-flex justify-content-center\">\n          <form\n            className=\"w-75\"\n            style={{ maxWidth: \"600px\" }}\n            onSubmit={formik.handleSubmit}\n            encType=\"multipart/form-data\"\n          >\n            <div className=\"mb-3\">\n              <label htmlFor=\"category\" className=\"form-label\">\n                Category\n              </label>\n              <div className=\"row mx-0 p-0\">\n                <div className=\"col-11 m-0 p-0 pe-1\">\n                  <div className=\"dropdown\">\n                    <div className=\"arrow_down\">\n                      <img src={ArrowDown} alt=\"\" />\n                    </div>\n                    <input\n                      type=\"text\"\n                      placeholder=\"All\"\n                      {...formik.getFieldProps('category')}\n                      readOnly\n                  className={`form-control ${formik.touched.category && formik.errors.category ? 'input-error' : ''}`}\n\n                    />\n                    <div className=\"dropdown-content\" style={{ height: '200px', overflow: 'auto' }}>\n                    {categoryFilter.length > 0 && categoryFilter.map((item: any, index: any) => (\n  <span className=\"h6\" key={item.name}  onClick={() => formik.setFieldValue('category', item.name)}>\n    {item.name}\n    {item.subcategories?.map((subitem: any, subindex: any) => (\n      <span className=\"text-muted\" key={subindex}>\n        {subitem.name}\n        {subitem.subcategories?.map((inneritem: any, innerindex: any) => (\n          <span \n            className=\"fs-6 hover-span\"\n            key={innerindex}\n           \n          >\n            {inneritem.name}\n          </span>\n        ))}\n      </span>\n    ))}\n  </span>\n))}\n\n                    </div>\n                  \n                  </div>\n                </div>\n                <button\n                  className=\"btn btn-dark col col-1 p-0 justify-content-center\"\n                  type=\"button\"\n                  onClick={handleShow}\n                >\n                  <Icon icon=\"Add\" size=\"30px\" />\n                </button>\n                {formik.touched.category && formik.errors.category ? (\n                  <div className=\"error-message\">{formik.errors.category}</div>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"outputType\" className=\"form-label\">\n                How would you like to view data?\n              </label>\n              <div className=\"dropdown\">\n                <div className=\"arrow_down\">\n                  <img src={ArrowDown} alt=\"\" />\n                </div>\n                <input\n                  type=\"text\"\n                  id=\"outputType\"\n               \n                  placeholder=\"All\"\n                  className={`form-control ${formik.touched.outputType && formik.errors.outputType ? 'input-error' : ''}`}\n                  {...formik.getFieldProps('outputType')}\n                />\n                <div className=\"dropdown-content\">\n                  <span className=\"hover-span\" onClick={() => formik.setFieldValue('outputType', 'Chart')}>Chart</span>\n                  <span className=\"hover-span\" onClick={() => formik.setFieldValue('outputType', 'Table')}>Table</span>\n                  <span className=\"hover-span\" onClick={() => formik.setFieldValue('outputType', 'Chart and Table')}>Chart and Table</span>\n                </div>\n                {formik.touched.outputType && formik.errors.outputType ? (\n                  <div className=\"error-message\">{formik.errors.outputType}</div>\n                ) : null}\n              </div>\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"name\" className=\"form-label\">\n                Script name\n              </label>\n              <input\n                type=\"text\"\n                id=\"name\"\n              \n                className={`form-control ${formik.touched.name && formik.errors.name ? 'input-error' : ''}`}\n                {...formik.getFieldProps('name')}\n              />\n              {formik.touched.name && formik.errors.name ? (\n                <div className=\"error-message\">{formik.errors.name}</div>\n              ) : null}\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"file\" className=\"form-label\">\n                Select a file\n              </label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                name=\"file\"\n                className={`form-control ${formik.touched.file && formik.errors.file ? 'input-error' : ''}`}\n                onChange={(event:any) => formik.setFieldValue('file', event.target.files[0])}\n              />\n              {formik.touched.file && formik.errors.file ? (\n                <div className=\"error-message\">{formik.errors.file}</div>\n              ) : null}\n            </div>\n\n            <div className=\"mx-auto text-center d-flex justify-content-between\">\n              <button type=\"submit\" className=\"btn btn-dark px-5\">\n                Upload\n              </button>\n              <button\n                type=\"reset\"\n                className=\"btn btn-light bordered-button px-5\"\n                onClick={() => formik.resetForm()}\n              >\n                Reset\n              </button>\n            </div>\n          </form>\n\n          <CategoryModal show={show} handleClose={handleClose} categoryFilter={categoryFilter} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadScriptForm;\n"],"names":["_ref","show","handleClose","categoryFilter","create","isLoading","isSuccess","isError","error","data","useCreateMutation","refreshtoken","Res","useRefreshtokenMutation","console","log","navigate","useNavigate","selectValue","setSelectValue","useState","handleToast","useToast","formik","useFormik","initialValues","name","parent","parentName","validationSchema","Yup","required","onSubmit","values","token","loginUSer","access","useEffect","SuccessToast","ErrorToast","localStorage","removeItem","apiError","detail","_jsx","_Fragment","children","Modal","size","centered","onHide","Body","className","style","borderRadius","overflow","handleSubmit","encType","_jsxs","htmlFor","id","value","onChange","handleChange","onBlur","handleBlur","touched","errors","type","placeholder","readOnly","height","length","map","item","index","_item$subcategories","onClick","setFieldValue","subcategories","subitem","subindex","_subitem$subcategorie","inneritem","innerindex","ActiveRoute","CategoryManager","path","category","outputType","file","UploadScriptForm","loginUser","setLoginUser","storedLoginUser","getItem","JSON","parse","AllCategory","useGetAllCategoryQuery","page_no","page_size","categoryData","categories","setCategoryFilter","useGetuserbytokenQuery","setShow","categoryMap","forEach","cat","parent_name","Object","find","parentCat","push","structuredCategories","filter","maxWidth","src","ArrowDown","alt","getFieldProps","handleShow","Icon","icon","event","target","files","resetForm","CategoryModal"],"sourceRoot":""}