{"version":3,"file":"static/js/618.f0c59c32.chunk.js","mappings":"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","sources":["Comopnent/ui/Modals/CategoryModal/CategoryModal.tsx","pages/UploadScript/UploadScript.tsx"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ActiveRoute } from \"../../../../Menu\";\r\nimport { Categoryarray } from \"../../../../DummyData/TableData\";\r\nimport { useCreateMutation } from \"../../../../Redux/CategoryQuery\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { loginUSer } from \"../../../../customHook/getrole\";\r\n\r\nimport { useRefreshTokenMutation } from \"../../../../Redux/AuthSlice\";\r\nimport useToast from \"../../../../customHook/toast\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\ninterface CategoryModalProps {\r\n  show: boolean;\r\n  handleClose: () => void;\r\n  categoryFilter: any[];\r\n}\r\n\r\nconst CategoryModal: FC<CategoryModalProps> = ({\r\n  show,\r\n  handleClose,\r\n  categoryFilter,\r\n}) => {\r\n  const [create, { isLoading, isSuccess, isError, error, data }] =\r\n    useCreateMutation();\r\n  const [refreshtoken, Res] = useRefreshTokenMutation();\r\n\r\n  \r\n\r\n  const navigate = useNavigate();\r\n  const [selectValue, setSelectValue] = useState(\"\");\r\n  const handleToast = useToast();\r\n\r\n  // Formik setup\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      parent_category: \"\",\r\n      parent_categoryName:\"\"\r\n    },\r\n    validationSchema: Yup.object({\r\n      name: Yup.string().required(\"Category name is required\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n  \r\n      \r\n      create({ token: loginUSer.access, data: values }); // Call mutation with form values\r\n      handleClose();\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      handleToast.SuccessToast(`New Category added successfully`);\r\n    }\r\n\r\n    if (isError) {\r\n      if ((error as any)?.data) {\r\n     \r\n        handleToast.ErrorToast(\r\n          \"Please login again.\"\r\n        );\r\n  \r\n      \r\n      } else {\r\n        console.log(\"An unknown error occurred.\");\r\n      }\r\n    }\r\n  }, [isSuccess, isError, error, data]);\r\n  return (\r\n    <>\r\n      <Modal\r\n        size=\"lg\"\r\n        fullscreen=\"md-down\" \r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={show}\r\n        onHide={handleClose}\r\n      >\r\n        <Modal.Body\r\n          className=\"bg-light-green\"\r\n          style={{\r\n            borderRadius: \"25px\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n          <form onSubmit={formik.handleSubmit} encType=\"multipart/form-data\">\r\n            <div className=\"mb-3\">\r\n              <div className=\"row mx-0 px-3\">\r\n                <div className=\"col-12 m-0\">\r\n                  <label htmlFor=\"category\" className=\"form-label\">\r\n                    Category Name\r\n                  </label>\r\n                  <input\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    className=\"form-control m-0\"\r\n                    required\r\n                    value={formik.values.name}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                  />\r\n                  {formik.touched.name && formik.errors.name ? (\r\n                    <div className=\"text-danger\">{formik.errors.name}</div>\r\n                  ) : null}\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                  <label htmlFor=\"parent_category\" className=\"form-label\">\r\n                    Parent Category\r\n                  </label>\r\n\r\n                  <div className=\"dropdown\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"All\"\r\n                      value={formik.values.parent_categoryName}\r\n                      readOnly\r\n                    />\r\n                    <div\r\n                      className=\"dropdown-content\"\r\n                      style={{ height: \"200px\", overflow: \"auto\" }}\r\n                    >\r\n                      {categoryFilter.length > 0 &&\r\n                        categoryFilter.map((item: any, index: any) => (\r\n                          <span className=\"h6  \" key={item.name}>\r\n                            <span\r\n                              className=\"hover-span \"\r\n                              onClick={() =>\r\n                               { formik.setFieldValue(\"parent_category\", item.id)\r\n                                formik.setFieldValue(\"parent_categoryName\", item.name)\r\n                               }\r\n                              }\r\n                            >\r\n                              {item.name}\r\n                            </span>\r\n                          \r\n                          </span>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 row justify-content-evenly m-0\">\r\n                  <label\r\n                    style={{ height: \"33px\" }}\r\n                    htmlFor=\"category\"\r\n                    className=\"invisible\"\r\n                  >\r\n                    Last Updated\r\n                  </label>\r\n\r\n                  <button\r\n                    onClick={() =>\r\n                      navigate(`/account/${ActiveRoute.CategoryManager.path}`)\r\n                    }\r\n                    className=\"btn border border-dark col-5 px-3 fw-bold\"\r\n                    type=\"button\"\r\n                  >\r\n                    Edit All Category\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-dark col-5 px-3 fw-bold\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Apply\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryModal;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Icon from \"../../Comopnent/ui/icon/Icon\";\r\nimport CategoryModal from \"../../Comopnent/ui/Modals/CategoryModal/CategoryModal\";\r\nimport ArrowDown from '../../assest/image/arrow-down.png';\r\nimport { useGetUserByTokenQuery } from \"../../Redux/AuthSlice\";\r\nimport { useGetAllCategoryQuery } from \"../../Redux/CategoryQuery\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { CreateScripts } from \"../../Redux/Script/ScriptSlice\";\r\nimport useToast from \"../../customHook/toast\";\r\n\r\n// Define validation schema using Yup\r\nconst validationSchema = Yup.object({\r\n  category: Yup.string().required('Category is required'),\r\n  output_type: Yup.string().required('Output type is required'),\r\n  name: Yup.string().required('Script name is required'),\r\n  file: Yup.mixed().required('File is required'),\r\n});\r\n\r\nconst UploadScriptForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [loginUser, setLoginUser] = useState<any>(null);\r\n  const fileRef:any = useRef(null)\r\n  // Effect to retrieve loginUser from localStorage on component mount\r\n  useEffect(() => {\r\n    const storedLoginUser = localStorage.getItem(\"login\");\r\n    if (storedLoginUser) {\r\n      setLoginUser(JSON.parse(storedLoginUser));\r\n    }\r\n  }, []);\r\n\r\n  const { data: AllCategory, isError } = useGetAllCategoryQuery(\r\n    { token: loginUser?.access, page_no: 1, page_size: 1000 },\r\n    {\r\n      skip: !loginUser, // Skip query execution if loginUser is null\r\n    }\r\n  );\r\n\r\n \r\n\r\n  const categoryData = AllCategory?.results || [];\r\n \r\n  \r\n  const handleToast = useToast();\r\n  \r\n  const [categoryFilter, setCategoryFilter] = useState<any>([]);\r\n\r\n  const { data, error, isLoading } = useGetUserByTokenQuery({ token: loginUser?.access, page_no: 1, page_size: 1000 },\r\n    {\r\n      skip: !loginUser, // Skip query execution if loginUser is null\r\n    });\r\n  const [show, setShow] = useState(false);\r\n  const [selectValue, setSelectValue] = useState('');\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      category: '',\r\n      output_type: '',\r\n      name: '',\r\n      file: null,\r\n      description:'',\r\n      parentName:''\r\n    },\r\n    validationSchema,\r\n    onSubmit:async (values:any,{resetForm}) => {\r\n      // Create FormData object\r\n      const formData = new FormData();\r\n      formData.append('category', values.category);\r\n      formData.append('output_type', 'plt');\r\n      formData.append('name', values.name);\r\n      formData.append('file', values.file);\r\n      formData.append('description',values.description)\r\n      // Dispatch the action with FormData\r\n   await   dispatch(CreateScripts({formData,token: loginUser?.access})as any);\r\nresetForm()\r\nfileRef.current.value=''\r\n      handleToast.SuccessToast(`New Script added successfully`);\r\n    },\r\n  });\r\n\r\n  // useEffect(() => {\r\n  //   const categoryMap: any = {};\r\n  //   categoryData.forEach((cat: any) => {\r\n  //     categoryMap[cat.id] = { ...cat, subcategories: [] };\r\n  //   });\r\n  //   categoryData.forEach((cat: any) => {\r\n  //     if (cat?.parent_category !== null) {\r\n  //       const parent:any = Object.values(categoryMap).find(\r\n  //         (parentCat: any) => parentCat.name === cat?.parent_category\r\n  //       );\r\n  //       if (parent) {\r\n  //         parent.subcategories.push(categoryMap[cat.id]);\r\n  //       }\r\n  //     }\r\n  //   });\r\n  //   const structuredCategories = Object.values(categoryMap).filter(\r\n  //     (cat: any) => cat?.parent_category === null\r\n  //   );\r\n \r\n    \r\n  //   setCategoryFilter(structuredCategories);\r\n  // }, [categoryData]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"UploadScript_main_wrap mt-3\">\r\n        <h1 className=\"h1 fw-bold\">Upload a Script</h1>\r\n\r\n        <div className=\"d-flex justify-content-center\">\r\n          <form\r\n            className=\"w-75\"\r\n            style={{ maxWidth: \"600px\" }}\r\n            onSubmit={formik.handleSubmit}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"category\" className=\"form-label\">Category</label>\r\n              <div className=\"row mx-0 p-0\">\r\n                <div className=\"col-10 col-sm-10 col-md-11 m-0 p-0 pe-1\">\r\n                  <div className=\"dropdown\">\r\n                    <div className=\"arrow_down\">\r\n                      <img src={ArrowDown} alt=\"\" />\r\n                    </div>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"All\"\r\n                      value={formik.values.parentName}\r\n                      \r\n                      readOnly\r\n                      className={`form-control ${formik.touched.category && formik.errors.category ? 'input-error' : ''}`}\r\n                    />\r\n                    <div className=\"dropdown-content\" style={{ height: '200px', overflow: 'auto' }}>\r\n                      {categoryData.length > 0 && categoryData.map((item: any, index: any) => (\r\n                        <span className=\"h6 hover-span\" key={item.name} onClick={() => {\r\n                          formik.setFieldValue(\"parentName\", item.name)\r\n                          formik.setFieldValue('category', item.id)}}>\r\n                          {item.name}\r\n                         \r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-dark col-2 col-sm-2 col-md-1 p-0 justify-content-center\"\r\n                  type=\"button\"\r\n                  onClick={handleShow}\r\n                >\r\n                  <Icon icon=\"Add\" size=\"30px\" />\r\n                </button>\r\n                {formik.touched.category && formik.errors.category ? (\r\n                  <div className=\"error-message\">{formik.errors.category as any}</div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"output_type\" className=\"form-label\">How would you like to view data?</label>\r\n              <div className=\"dropdown\">\r\n                <div className=\"arrow_down\">\r\n                  <img src={ArrowDown} alt=\"\" />\r\n                </div>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"output_type\"\r\n                  placeholder=\"All\"\r\n                  className={`form-control ${formik.touched.output_type && formik.errors.output_type ? 'input-error' : ''}`}\r\n                  {...formik.getFieldProps('output_type')}\r\n                />\r\n                <div className=\"dropdown-content\">\r\n                  <span className=\"hover-span\" onClick={() => formik.setFieldValue('output_type', 'pd')}>Chart</span>\r\n                  <span className=\"hover-span\" onClick={() => formik.setFieldValue('output_type', 'plt')}>Table</span>\r\n                  <span className=\"hover-span\" onClick={() => formik.setFieldValue('output_type', 'pd plt')}>Chart and Table</span>\r\n                </div>\r\n                {formik.touched.output_type && formik.errors.output_type ? (\r\n                  <div className=\"error-message\">{formik.errors.output_type as any}</div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"name\" className=\"form-label\">Script name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                className={`form-control ${formik.touched.name && formik.errors.name ? 'input-error' : ''}`}\r\n                {...formik.getFieldProps('name')}\r\n              />\r\n              {formik.touched.name && formik.errors.name ? (\r\n                <div className=\"error-message\">{formik.errors.name as any}</div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"file\" className=\"form-label\">Select a file</label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"file\"\r\n                name=\"file\"\r\n              ref={fileRef}\r\n                className={`form-control ${formik.touched.file && formik.errors.file ? 'input-error' : ''}`}\r\n                onChange={(event: any) => formik.setFieldValue('file', event.target.files[0])}\r\n              />\r\n              {formik.touched.file && formik.errors.file ? (\r\n                <div className=\"error-message\">{formik.errors.file as any}</div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"mx-auto text-center d-flex justify-content-between row \">\r\n              <button type=\"submit\" className=\"btn btn-dark my-1 first-line:col-12 col-sm-12 col-md-5\">Upload</button>\r\n              <button\r\n                type=\"reset\"\r\n                className=\"btn btn-light bordered-button my-1  col-12 col-sm-12 col-md-5\"\r\n                onClick={() => formik.resetForm()}\r\n              >\r\n                Reset\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          <CategoryModal show={show} handleClose={handleClose} categoryFilter={categoryData} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadScriptForm;\r\n"],"names":["_ref","show","handleClose","categoryFilter","create","isLoading","isSuccess","isError","error","data","useCreateMutation","refreshtoken","Res","useRefreshTokenMutation","navigate","useNavigate","selectValue","setSelectValue","useState","handleToast","useToast","formik","useFormik","initialValues","name","parent_category","parent_categoryName","validationSchema","Yup","required","onSubmit","values","token","loginUSer","access","useEffect","SuccessToast","ErrorToast","console","log","_jsx","_Fragment","children","Modal","size","fullscreen","centered","onHide","Body","className","style","borderRadius","overflow","handleSubmit","encType","_jsxs","htmlFor","id","value","onChange","handleChange","onBlur","handleBlur","touched","errors","type","placeholder","readOnly","height","length","map","item","index","onClick","setFieldValue","ActiveRoute","CategoryManager","path","category","output_type","file","UploadScriptForm","dispatch","useDispatch","loginUser","setLoginUser","fileRef","useRef","storedLoginUser","localStorage","getItem","JSON","parse","AllCategory","useGetAllCategoryQuery","page_no","page_size","skip","categoryData","results","setCategoryFilter","useGetUserByTokenQuery","setShow","description","parentName","async","resetForm","formData","FormData","append","CreateScripts","current","maxWidth","src","ArrowDown","alt","handleShow","Icon","icon","getFieldProps","ref","event","target","files","CategoryModal"],"sourceRoot":""}