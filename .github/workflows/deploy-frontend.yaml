name: Deploy Frontend to AWS

on:
  push:
    branches: [ main ]
    paths:
      - "frontend/**"

env:
  AWS_REGION: ca-central-1

permissions:
  contents: read 
  
jobs:

  # test-frontend:
  #   name: Test Frontend
  #   runs-on: ubuntu-latest
  #   environment: Test (Frontend)
  #   env:
  #     SECRET_KEY: ${{ github.sha }}
  #     DEBUG: True

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4

  #   - name: Set up Node.js 22
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 22

  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.9.20' 


  #   - name: Update /etc/hosts
  #     run: |
  #       echo "127.0.0.1 api.localhost" | sudo tee -a /etc/hosts
  #       echo "127.0.0.1 admin.localhost" | sudo tee -a /etc/hosts

  #   - name: Install Backend Requirements
  #     run: pip install -r backend/requirements.txt

  #   - name: Migrate Database
  #     run: |
  #       mv backend/testdb.sqlite3 backend/db.sqlite3
  #       python backend/manage.py migrate

  #   - name: Run Backend
  #     run: python backend/manage.py runserver 0.0.0.0:8000 &

  #   - name: Wait for backend to be ready
  #     run: |
  #       echo "Waiting for backend to be ready..."
  #       until curl -s http://api.localhost:8000/ping/; do
  #         sleep 5
  #         echo "sleeping for 5 seconds..."
  #       done

  #   - name: Cypress run
  #     uses: cypress-io/github-action@v6
  #     with:
  #       start: npm start
  #       working-directory: frontend
  #       wait-on: 'http://localhost:4200'
  #       wait-on-timeout: 120
  #       env: REACT_APP_API_URL=http://api.localhost:8000,REACT_APP_BASE_URL=http://localhost:4200,REACT_APP_ADMIN_URL=https://admin.localhost:8000,DEV_USERNAME=testuser,DEV_PASSWORD=test123456

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    environment: Frontend (Production)
    # needs: test-frontend
    defaults:
      run:
        working-directory: frontend/

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}


    - name: Install dependencies
      run: npm install

    - name: Build project
      env:
        REACT_APP_API_URL: ${{ vars.API_URL }}
        CI: false
      run: CI=false npm run build

    - name: Sync S3 bucket content
      env:
        FRONTEND_BUCKET_NAME: s3://app.olandinvestments.com
      run: |
        aws s3 sync build/ $FRONTEND_BUCKET_NAME --delete

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_wrapper: false

    - name: Terraform Init
      working-directory: terraform/
      run: terraform init

    - name: Invalidate Cloudfront cache
      working-directory: terraform/
      run: aws cloudfront create-invalidation --distribution-id $(terraform output -raw cloudfront_distribution_id) --paths '/*'